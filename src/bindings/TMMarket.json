{
  "abi": [
    {
      "type": "function",
      "name": "claimFees",
      "inputs": [
        { "name": "caller", "type": "address", "internalType": "address" },
        { "name": "creator", "type": "address", "internalType": "address" },
        { "name": "staking", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "claimedFees", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getBaseToken",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "getCirculatingSupply",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDeltaAmounts",
      "inputs": [
        { "name": "deltaAmount", "type": "int256", "internalType": "int256" },
        { "name": "swapB2Q", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [
        {
          "name": "deltaBaseAmount",
          "type": "int256",
          "internalType": "int256"
        },
        {
          "name": "deltaQuoteAmount",
          "type": "int256",
          "internalType": "int256"
        },
        { "name": "quoteFees", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDeltaBaseAmount",
      "inputs": [
        { "name": "supply", "type": "uint256", "internalType": "uint256" },
        {
          "name": "deltaQuoteAmount",
          "type": "int256",
          "internalType": "int256"
        }
      ],
      "outputs": [
        {
          "name": "deltaBaseAmount",
          "type": "int256",
          "internalType": "int256"
        },
        {
          "name": "actualDeltaQuoteAmount",
          "type": "int256",
          "internalType": "int256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDeltaQuoteAmount",
      "inputs": [
        { "name": "supply", "type": "uint256", "internalType": "uint256" },
        {
          "name": "deltaBaseAmount",
          "type": "int256",
          "internalType": "int256"
        }
      ],
      "outputs": [
        {
          "name": "actualDeltaBaseAmount",
          "type": "int256",
          "internalType": "int256"
        },
        {
          "name": "deltaQuoteAmount",
          "type": "int256",
          "internalType": "int256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getFactory",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "getPendingFees",
      "inputs": [],
      "outputs": [
        { "name": "creatorFees", "type": "uint256", "internalType": "uint256" },
        { "name": "stakingFees", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getPriceAt",
      "inputs": [
        {
          "name": "circulatingSupply",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "swapB2Q", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "getPricePoints",
      "inputs": [{ "name": "swapB2Q", "type": "bool", "internalType": "bool" }],
      "outputs": [
        { "name": "", "type": "uint256[]", "internalType": "uint256[]" }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "getQuoteToken",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "getReserves",
      "inputs": [],
      "outputs": [
        { "name": "baseReserve", "type": "uint256", "internalType": "uint256" },
        { "name": "quoteReserve", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTotalSupply",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "swap",
      "inputs": [
        { "name": "recipient", "type": "address", "internalType": "address" },
        { "name": "deltaAmount", "type": "int256", "internalType": "int256" },
        { "name": "swapB2Q", "type": "bool", "internalType": "bool" },
        { "name": "data", "type": "bytes", "internalType": "bytes" },
        { "name": "referrer", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "deltaBaseAmount",
          "type": "int256",
          "internalType": "int256"
        },
        {
          "name": "deltaQuoteAmount",
          "type": "int256",
          "internalType": "int256"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "FeesClaimed",
      "inputs": [
        {
          "name": "token",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "caller",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "claimedFees",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Swap",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "recipient",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "deltaBaseAmount",
          "type": "int256",
          "indexed": false,
          "internalType": "int256"
        },
        {
          "name": "deltaQuoteAmount",
          "type": "int256",
          "indexed": false,
          "internalType": "int256"
        },
        {
          "name": "quoteFees",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [
        { "name": "target", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "AddressInsufficientBalance",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "FailedInnerCall", "inputs": [] },
    { "type": "error", "name": "Math__DivisionByZero", "inputs": [] },
    { "type": "error", "name": "Math__UnderOverflow", "inputs": [] },
    { "type": "error", "name": "PricePoints__OverflowInt256", "inputs": [] },
    {
      "type": "error",
      "name": "PricePoints__TotalSupplyExceeded",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "TMMarket__AlreadyInitialized", "inputs": [] },
    { "type": "error", "name": "TMMarket__InsufficientAmount", "inputs": [] },
    {
      "type": "error",
      "name": "TMMarket__InvalidCirculatingSupply",
      "inputs": []
    },
    { "type": "error", "name": "TMMarket__InvalidFees", "inputs": [] },
    { "type": "error", "name": "TMMarket__InvalidRecipient", "inputs": [] },
    { "type": "error", "name": "TMMarket__InvalidSwapCallback", "inputs": [] },
    { "type": "error", "name": "TMMarket__OnlyFactory", "inputs": [] },
    { "type": "error", "name": "TMMarket__ReentrantCall", "inputs": [] },
    { "type": "error", "name": "TMMarket__ReserveOverflow", "inputs": [] },
    { "type": "error", "name": "TMMarket__ZeroAmount", "inputs": [] }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061213d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806388cc58e411610097578063c4e41b2211610066578063c4e41b22146101d8578063c51c2d0e146101e0578063cd56aadc146101fc578063dc35ff771461022a57600080fd5b806388cc58e4146101a257806398acd7a6146101aa578063af688fed146101b2578063c357ed4c146101c557600080fd5b80635b2d9a3c116100d35780635b2d9a3c146101525780637cf0e1f5146101655780637ea516d2146101785780638129fc1c1461019857600080fd5b80630902f1ac146100fa5780632b112e491461011c5780634a64d67d14610132575b600080fd5b61010261023d565b604080519283526020830191909152015b60405180910390f35b610124610265565b604051908152602001610113565b61013a610292565b6040516001600160a01b039091168152602001610113565b610102610160366004611d55565b61029c565b610124610173366004611d85565b61034b565b61018b610186366004611db5565b610455565b6040516101139190611dd2565b6101a06104f4565b005b61013a61057a565b61013a610584565b6101246101c0366004611e32565b61058e565b6101026101d3366004611d55565b610739565b6101246107d7565b6002546001600160801b0380821691600160801b900416610102565b61020f61020a366004611d85565b6107e1565b60408051938452602084019290925290820152606001610113565b610102610238366004611e75565b610882565b60008061025d6001546001600160801b03600160801b8204811692911690565b915091509091565b600154600090600160801b90046001600160801b0316610283610bfe565b61028d9190611f3a565b905090565b600061028d610c0c565b600080826000036102b257506000905080610344565b60008084129080826102ce576102c88688611f3a565b866102d8565b866102d887611f4d565b915091506000806102eb84848788610c18565b915091506001600160ff1b03818317111561031957604051637f5c09ad60e01b815260040160405180910390fd5b600088136103305761032a82611f4d565b8161033a565b8161033a82611f4d565b9650965050505050505b9250929050565b600080610356610bfe565b905082158185106103a8578185111561038257604051630f0f694960e41b815260040160405180910390fd5b61039f600161038f610e0d565b6103999190611f3a565b82610e1b565b9250505061044f565b6103b0610e55565b6103c2670de0b6b3a764000087611f69565b6103cc9190611f96565b945060006103d8610e63565b905060006103e68288611f96565b905060006103f48389611faa565b905060006104028386610e1b565b9050600061041a610414856001611fbe565b87610e1b565b905061043b8361042a8484611f3a565b6104349190611f69565b8688610e71565b6104459083611fbe565b9750505050505050505b92915050565b60606000610461610e0d565b905060008167ffffffffffffffff81111561047e5761047e611fd1565b6040519080825280602002602001820160405280156104a7578160200160208202803683370190505b50905060005b828110156104ec576104bf8186610e1b565b8282815181106104d1576104d1611fe7565b60209081029190910101526104e581611ffd565b90506104ad565b509392505050565b6104fc610ea2565b6001600160a01b0316336001600160a01b03161461052d57604051632f4b4f2560e01b815260040160405180910390fd5b6000541561054e5760405163133cb03d60e21b815260040160405180910390fd5b600360005561055b610bfe565b600180546001600160801b03928316600160801b029216919091179055565b600061028d610ea2565b600061028d610eae565b60008054600190811880835516156105b957604051631493badf60e01b815260040160405180910390fd5b6105c1610ea2565b6001600160a01b0316336001600160a01b0316146105f257604051632f4b4f2560e01b815260040160405180910390fd5b816001600160a01b0316846001600160a01b0316036106275750600280546001600160801b03808216909255600160801b9004165b826001600160a01b0316846001600160a01b03160361067257600254610656906001600160801b031682611fbe565b600280546fffffffffffffffffffffffffffffffff1916905590505b801561072957600180548291906000906106969084906001600160801b0316612016565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555060006106c4610c0c565b90506106da6001600160a01b0382168684610eba565b846001600160a01b0316816001600160a01b03167ffe3464cd748424446c37877c28ce5b700222c5bc9f90d908afcc4e5cb22707ff8460405161071f91815260200190565b60405180910390a3505b6000805460011890559392505050565b6000808260000361074f57506000905080610344565b600080600085131561077d576107658686610f26565b909250905061077382611f4d565b93509150816107a4565b61078f8661078a87611f4d565b6110a1565b90925090508161079e82611f4d565b90945092505b6001600160ff1b0381831711156107ce57604051637f5c09ad60e01b815260040160405180910390fd5b50509250929050565b600061028d610bfe565b600080600084600003610807576040516303eb2e0760e11b815260040160405180910390fd5b600154600090600160801b90046001600160801b0316610825610bfe565b61082f9190611f3a565b9050600086138515151461084c576108478187610739565b610856565b610856818761029c565b9094509250600083131561087a576108778161087186611f4d565b8561122a565b91505b509250925092565b600080546001908118808355829116156108af57604051631493badf60e01b815260040160405180910390fd5b6001600160a01b0388166108d6576040516303174edd60e21b815260040160405180910390fd5b866000036108f7576040516303eb2e0760e11b815260040160405180910390fd5b6000806109176001546001600160801b03600160801b8204811692911690565b91509150600082610926610bfe565b6109309190611f3a565b905060008a138915151461094d57610948818b610739565b610957565b610957818b61029c565b909550935060008080808c61098d5760ff89901d808a011860ff89901d808a0118610980610eae565b610988610c0c565b6109af565b60ff88901d8089011860ff8a901d808b01186109a7610c0c565b6109af610eae565b935093509350935060008411156109de576109de8f85846001600160a01b0316610eba9092919063ffffffff16565b8a15610abf5760006109f18c60a0611fbe565b67ffffffffffffffff811115610a0957610a09611fd1565b6040519080825280601f01601f191660200182016040528015610a33576020820181803683370190505b509050600063c556a18982528a60208301528960408301526060808301528c60808301528c8e60a0840137600460008e60a00184601c016000335af19050808015610a905763c556a18960005160e01c1460043d14169150610a9a565b3d6000803e3d6000fd5b5080600003610abc5760405163eb27a8cd60e01b815260040160405180910390fd5b50505b6040516370a0823160e01b815230600482015260009081906001600160a01b038416906370a0823190602401602060405180830381865afa158015610b08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2c919061203d565b90506001600160801b03811115610b565760405163f6b7803960e01b815260040160405180910390fd5b8e610b6f57610b6a8c888b8b8a8a87611250565b610b7c565b610b7c898988888561149c565b9150508f6001600160a01b0316336001600160a01b03167f86cc8bfdfdfabc765ac3e479a03d9e964b00478f3dd26615949fa6b475904b028c8c85604051610bd7939291909283526020830191909152604082015260600190565b60405180910390a3505060008054600118905550959c949b50939950505050505050505050565b600061028d604c6080611521565b600061028d6028611548565b600080610c23610bfe565b861115610c43576040516314760e3760e31b815260040160405180910390fd5b6000610c4d610e0d565b90506000610c59610e55565b90506000610c65610e63565b9050600082610c7c8b670de0b6b3a7640000611f69565b610c869190611f96565b899650905082610c9e87670de0b6b3a7640000611f69565b610ca89190611f96565b98506000610cb68383611f96565b9050610cc28383611faa565b91506000610cd0828b610e1b565b90505b60008b118015610ced575085610ce883611ffd565b925082105b15610db0576000610cfe838c610e1b565b90506000610d1e8d610d108789611f3a565b818118918111919091021890565b90506000610d878288610d32876002611f69565b610d3c9190611f69565b610d47896002611f69565b610d519086611fbe565b610d5b8888611f3a565b610d659190611f69565b610d6f9190611fbe565b610d818a671bc16d674ec80000611f69565b8f61156a565b9050610d93818b611fbe565b9950610d9f828f611f3a565b9d5060009550829350505050610cd3565b610dcc610dbd868d611f69565b670de0b6b3a76400008b610e71565b610dd69089611f3a565b610dfa610de161165e565b610deb908a611f69565b670de0b6b3a76400008c610e71565b9750975050505050505094509492505050565b600061028d606c6008611521565b6000610e4e610e2b846020611f69565b83610e3757607d610e3a565b606d5b60ff16610e479190611fbe565b6080611521565b9392505050565b600061028d603c6040611521565b600061028d605c6080611521565b600082600003610e945760405163677631cf60e11b815260040160405180910390fd5b501581830615171591040190565b600061028d6000611548565b600061028d6014611548565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052610f2190849061166c565b505050565b600080610f31610bfe565b841115610f51576040516314760e3760e31b815260040160405180910390fd5b6000610f5b610e0d565b90506000610f67610e55565b90506000610f7361165e565b90506000610f7f610e63565b9050600083610f968a670de0b6b3a7640000611f69565b610fa09190611f96565b9050600083610fb78a670de0b6b3a7640000611f69565b610fc19190611f96565b90506000610fcf8484611f96565b90506000610fdd8585611faa565b90506000610fec836001610e1b565b90505b60008411801561100957508861100484611ffd565b935083105b1561105957600061101b846001610e1b565b905060008061102d84848b888b6116d4565b909250905061103c828f611fbe565b9d506110488188611f3a565b965060009450829350505050610fef565b611076611066898d611f69565b670de0b6b3a76400006000610e71565b6110836110668987611f69565b61108d908e611f3a565b9a509a505050505050505050509250929050565b6000806110ac610bfe565b8411156110cc576040516314760e3760e31b815260040160405180910390fd5b60006110d6610e55565b905060006110e261165e565b905060006110ee610e63565b905060008361110589670de0b6b3a7640000611f69565b61110f9190611f96565b905060008361112689670de0b6b3a7640000611f69565b6111309190611f96565b9050600061113e8484611f96565b9050600061114c8585611faa565b90508060000361115d575083611169565b61116682611ffd565b91505b6000611176836000610e1b565b90505b6000841180156111895750600083115b156111e35760006111a661119c85612056565b9450846000610e1b565b90506000806111b883858b888b6117f0565b90925090506111c7828e611fbe565b9c506111d38188611f3a565b9650889450829350505050611179565b6112006111f0898c611f69565b670de0b6b3a76400006001610e71565b61120d6111f08987611f69565b611217908d611f3a565b9950995050505050505050509250929050565b60008061123b858560006001610c18565b915050808311156104ec579091039392505050565b60008161125d8487611fbe565b111561127c57604051634bb63a7760e11b815260040160405180910390fd5b6000611292888661128d8987611f3a565b61122a565b9050801561145b576000806000806112a8611887565b919450925090506000816112bc8486611fbe565b6112c69190611fbe565b90506000816112d58589611f69565b6112df9190611f96565b90506000826112ee858a611f69565b6112f89190611f96565b905080611305838a611f3a565b61130f9190611f3a565b60028054919850839160009061132f9084906001600160801b031661206d565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555080600260108282829054906101000a90046001600160801b0316611377919061206d565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555050505050505080846113ad9190611f3a565b935060006113b9610ea2565b905060006113c5610c0c565b90506113db6001600160a01b0382168385610eba565b6040516325a6bbf560e11b81526001600160a01b0382811660048301528d8116602483015260448201859052831690634b4d77ea906064016020604051808303816000875af1158015611432573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611456919061208d565b505050505b6114658588611f3a565b6001600160801b038481169116600160801b026fffffffffffffffffffffffffffffffff1916176001559050979650505050505050565b6000816114a98488611fbe565b11156114c857604051634bb63a7760e11b815260040160405180910390fd5b600180546001600160801b03808516600160801b0291161790556114ec8486611f3a565b600180546fffffffffffffffffffffffffffffffff19166001600160801b039290921691909117905550600095945050505050565b60008061152c611909565b9050602084820160003960005183610100031c91505092915050565b600080611553611909565b90506020838201600039505060005160601c919050565b60008260000361158d5760405163677631cf60e11b815260040160405180910390fd5b600019848609848602808210818303039150811560018114611644578583106115be5763115285766000526004601cfd5b8587890960008781038816978890049782850381900494831190950360019186900395909504018402929092176002600388028118808902820302808902820302808902820302808902820302808902820302808902909103028102861584151715810195509092908086101561163d5763115285766000526004601cfd5b5050611653565b84158683061517158683040193505b505050949350505050565b600061028d60446040611521565b60006116816001600160a01b03841683611920565b905080516000141580156116a65750808060200190518101906116a4919061208d565b155b15610f2157604051635274afe760e01b81526001600160a01b03841660048201526024015b60405180910390fd5b600080806116e28888611f3a565b9050600061172d86886116f68c6002611f69565b6117009190611f69565b61170a8986611f69565b6117149190611fbe565b6117268a671bc16d674ec80000611f69565b600061156a565b905060006117598861173f8b8d611fbe565b6117499190611f69565b671bc16d674ec800006001610e71565b905060006117678383611f3a565b90508087106117845793508361177d888a611f3a565b95506117e2565b86945060006117a0858d8c6117998a89611fbe565b600061192e565b90508060006117af878c611f69565b8c8f6117bb9190611f69565b6117c59190611fbe565b90506117dc6117d48284611f3a565b886000610e71565b98505050505b505050509550959350505050565b600080806117fe8888611f3a565b9050600061181286886116f68c6002611f69565b90508085106118265780925085935061187b565b849250600061183b838b8a6117998887611f3a565b905060006118498489611f69565b6118538a8d611f69565b61185d9190611fbe565b90508161187561186d8284611f3a565b866001610e71565b96505050505b50509550959350505050565b6000806000611894610ea2565b604051633de8682160e01b81523060048201526001600160a01b039190911690633de8682190602401606060405180830381865afa1580156118da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118fe91906120aa565b925092509250909192565b600060023803602081600039505060005160f01c90565b6060610e4e838360006119a7565b6000808061195661193f8988611f69565b61195187671bc16d674ec80000611f69565b611a44565b909250905060008061197561196b898b611f69565b6119518a8c611f69565b9150915060008061198886868686611a63565b9150915061199782828a611aa4565b9c9b505050505050505050505050565b6060814710156119cc5760405163cd78605960e01b81523060048201526024016116cb565b600080856001600160a01b031684866040516119e891906120d8565b60006040518083038185875af1925050503d8060008114611a25576040519150601f19603f3d011682016040523d82523d6000602084013e611a2a565b606091505b5091509150611a3a868383611bf5565b9695505050505050565b6000806000198385098385029250828110838203039150509250929050565b8382018481108483019081019085811090821017156000819003611a9a576040516308a942bb60e11b815260040160405180910390fd5b5094509492505050565b600082600003611abf57611ab88483611c51565b9050610e4e565b6000198303611ae1576040516308a942bb60e11b815260040160405180910390fd5b600160fe1b600160801b841060800293841b600160c01b811060400290811b600160e01b811060200290811b600160f01b811060100290811b600160f81b811060080290811b600160fc1b811060040290811b9586106002029490980192909201010194909401840185811b9561010082900381901c9290951b9190911793906000611b6d8682611c51565b600181811b8280028903608081811c600081900384810690910192821b8d831c17848106939093018481049185900493859004939093010180821c9390920680821c848110941483800291831b6001600160801b038f16179190911016929092179390911b019190910392901c9190911c808002909214841517159091019150509392505050565b606082611c0a57611c0582611d29565b610e4e565b8151158015611c2157506001600160a01b0384163b155b15611c4a57604051639996b31560e01b81526001600160a01b03851660048201526024016116cb565b5080610e4e565b600082600003611c635750600061044f565b6000611cd984600160806001600160801b0383110291821c604067ffffffffffffffff82110290811c602063ffffffff82110290811c601061ffff82110290811c600860ff82110290811c6004600f82110290811c6002600382110290811c969096119490960192909201010192909201010190565b600190811c81811b9086901c01811c80860401811c80860401811c80860401811c80860401811c80860401811c80860401901c808504811190038080029094119215159290920290920192915050565b805115611d395780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b50565b60008060408385031215611d6857600080fd5b50508035926020909101359150565b8015158114611d5257600080fd5b60008060408385031215611d9857600080fd5b823591506020830135611daa81611d77565b809150509250929050565b600060208284031215611dc757600080fd5b8135610e4e81611d77565b6020808252825182820181905260009190848201906040850190845b81811015611e0a57835183529284019291840191600101611dee565b50909695505050505050565b80356001600160a01b0381168114611e2d57600080fd5b919050565b600080600060608486031215611e4757600080fd5b611e5084611e16565b9250611e5e60208501611e16565b9150611e6c60408501611e16565b90509250925092565b60008060008060008060a08789031215611e8e57600080fd5b611e9787611e16565b9550602087013594506040870135611eae81611d77565b9350606087013567ffffffffffffffff80821115611ecb57600080fd5b818901915089601f830112611edf57600080fd5b813581811115611eee57600080fd5b8a6020828501011115611f0057600080fd5b602083019550809450505050611f1860808801611e16565b90509295509295509295565b634e487b7160e01b600052601160045260246000fd5b8181038181111561044f5761044f611f24565b6000600160ff1b8201611f6257611f62611f24565b5060000390565b808202811582820484141761044f5761044f611f24565b634e487b7160e01b600052601260045260246000fd5b600082611fa557611fa5611f80565b500490565b600082611fb957611fb9611f80565b500690565b8082018082111561044f5761044f611f24565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006001820161200f5761200f611f24565b5060010190565b6001600160801b0382811682821603908082111561203657612036611f24565b5092915050565b60006020828403121561204f57600080fd5b5051919050565b60008161206557612065611f24565b506000190190565b6001600160801b0381811683821601908082111561203657612036611f24565b60006020828403121561209f57600080fd5b8151610e4e81611d77565b6000806000606084860312156120bf57600080fd5b8351925060208401519150604084015190509250925092565b6000825160005b818110156120f957602081860181015185830152016120df565b50600092019182525091905056fea264697066735822122053777c5bc040cb6fa9c333a18b8fb52c7e46cd01ef26680bf89718e9267db6f264736f6c63430008140033",
    "sourceMap": "689:16826:52:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806388cc58e411610097578063c4e41b2211610066578063c4e41b22146101d8578063c51c2d0e146101e0578063cd56aadc146101fc578063dc35ff771461022a57600080fd5b806388cc58e4146101a257806398acd7a6146101aa578063af688fed146101b2578063c357ed4c146101c557600080fd5b80635b2d9a3c116100d35780635b2d9a3c146101525780637cf0e1f5146101655780637ea516d2146101785780638129fc1c1461019857600080fd5b80630902f1ac146100fa5780632b112e491461011c5780634a64d67d14610132575b600080fd5b61010261023d565b604080519283526020830191909152015b60405180910390f35b610124610265565b604051908152602001610113565b61013a610292565b6040516001600160a01b039091168152602001610113565b610102610160366004611d55565b61029c565b610124610173366004611d85565b61034b565b61018b610186366004611db5565b610455565b6040516101139190611dd2565b6101a06104f4565b005b61013a61057a565b61013a610584565b6101246101c0366004611e32565b61058e565b6101026101d3366004611d55565b610739565b6101246107d7565b6002546001600160801b0380821691600160801b900416610102565b61020f61020a366004611d85565b6107e1565b60408051938452602084019290925290820152606001610113565b610102610238366004611e75565b610882565b60008061025d6001546001600160801b03600160801b8204811692911690565b915091509091565b600154600090600160801b90046001600160801b0316610283610bfe565b61028d9190611f3a565b905090565b600061028d610c0c565b600080826000036102b257506000905080610344565b60008084129080826102ce576102c88688611f3a565b866102d8565b866102d887611f4d565b915091506000806102eb84848788610c18565b915091506001600160ff1b03818317111561031957604051637f5c09ad60e01b815260040160405180910390fd5b600088136103305761032a82611f4d565b8161033a565b8161033a82611f4d565b9650965050505050505b9250929050565b600080610356610bfe565b905082158185106103a8578185111561038257604051630f0f694960e41b815260040160405180910390fd5b61039f600161038f610e0d565b6103999190611f3a565b82610e1b565b9250505061044f565b6103b0610e55565b6103c2670de0b6b3a764000087611f69565b6103cc9190611f96565b945060006103d8610e63565b905060006103e68288611f96565b905060006103f48389611faa565b905060006104028386610e1b565b9050600061041a610414856001611fbe565b87610e1b565b905061043b8361042a8484611f3a565b6104349190611f69565b8688610e71565b6104459083611fbe565b9750505050505050505b92915050565b60606000610461610e0d565b905060008167ffffffffffffffff81111561047e5761047e611fd1565b6040519080825280602002602001820160405280156104a7578160200160208202803683370190505b50905060005b828110156104ec576104bf8186610e1b565b8282815181106104d1576104d1611fe7565b60209081029190910101526104e581611ffd565b90506104ad565b509392505050565b6104fc610ea2565b6001600160a01b0316336001600160a01b03161461052d57604051632f4b4f2560e01b815260040160405180910390fd5b6000541561054e5760405163133cb03d60e21b815260040160405180910390fd5b600360005561055b610bfe565b600180546001600160801b03928316600160801b029216919091179055565b600061028d610ea2565b600061028d610eae565b60008054600190811880835516156105b957604051631493badf60e01b815260040160405180910390fd5b6105c1610ea2565b6001600160a01b0316336001600160a01b0316146105f257604051632f4b4f2560e01b815260040160405180910390fd5b816001600160a01b0316846001600160a01b0316036106275750600280546001600160801b03808216909255600160801b9004165b826001600160a01b0316846001600160a01b03160361067257600254610656906001600160801b031682611fbe565b600280546fffffffffffffffffffffffffffffffff1916905590505b801561072957600180548291906000906106969084906001600160801b0316612016565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555060006106c4610c0c565b90506106da6001600160a01b0382168684610eba565b846001600160a01b0316816001600160a01b03167ffe3464cd748424446c37877c28ce5b700222c5bc9f90d908afcc4e5cb22707ff8460405161071f91815260200190565b60405180910390a3505b6000805460011890559392505050565b6000808260000361074f57506000905080610344565b600080600085131561077d576107658686610f26565b909250905061077382611f4d565b93509150816107a4565b61078f8661078a87611f4d565b6110a1565b90925090508161079e82611f4d565b90945092505b6001600160ff1b0381831711156107ce57604051637f5c09ad60e01b815260040160405180910390fd5b50509250929050565b600061028d610bfe565b600080600084600003610807576040516303eb2e0760e11b815260040160405180910390fd5b600154600090600160801b90046001600160801b0316610825610bfe565b61082f9190611f3a565b9050600086138515151461084c576108478187610739565b610856565b610856818761029c565b9094509250600083131561087a576108778161087186611f4d565b8561122a565b91505b509250925092565b600080546001908118808355829116156108af57604051631493badf60e01b815260040160405180910390fd5b6001600160a01b0388166108d6576040516303174edd60e21b815260040160405180910390fd5b866000036108f7576040516303eb2e0760e11b815260040160405180910390fd5b6000806109176001546001600160801b03600160801b8204811692911690565b91509150600082610926610bfe565b6109309190611f3a565b905060008a138915151461094d57610948818b610739565b610957565b610957818b61029c565b909550935060008080808c61098d5760ff89901d808a011860ff89901d808a0118610980610eae565b610988610c0c565b6109af565b60ff88901d8089011860ff8a901d808b01186109a7610c0c565b6109af610eae565b935093509350935060008411156109de576109de8f85846001600160a01b0316610eba9092919063ffffffff16565b8a15610abf5760006109f18c60a0611fbe565b67ffffffffffffffff811115610a0957610a09611fd1565b6040519080825280601f01601f191660200182016040528015610a33576020820181803683370190505b509050600063c556a18982528a60208301528960408301526060808301528c60808301528c8e60a0840137600460008e60a00184601c016000335af19050808015610a905763c556a18960005160e01c1460043d14169150610a9a565b3d6000803e3d6000fd5b5080600003610abc5760405163eb27a8cd60e01b815260040160405180910390fd5b50505b6040516370a0823160e01b815230600482015260009081906001600160a01b038416906370a0823190602401602060405180830381865afa158015610b08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2c919061203d565b90506001600160801b03811115610b565760405163f6b7803960e01b815260040160405180910390fd5b8e610b6f57610b6a8c888b8b8a8a87611250565b610b7c565b610b7c898988888561149c565b9150508f6001600160a01b0316336001600160a01b03167f86cc8bfdfdfabc765ac3e479a03d9e964b00478f3dd26615949fa6b475904b028c8c85604051610bd7939291909283526020830191909152604082015260600190565b60405180910390a3505060008054600118905550959c949b50939950505050505050505050565b600061028d604c6080611521565b600061028d6028611548565b600080610c23610bfe565b861115610c43576040516314760e3760e31b815260040160405180910390fd5b6000610c4d610e0d565b90506000610c59610e55565b90506000610c65610e63565b9050600082610c7c8b670de0b6b3a7640000611f69565b610c869190611f96565b899650905082610c9e87670de0b6b3a7640000611f69565b610ca89190611f96565b98506000610cb68383611f96565b9050610cc28383611faa565b91506000610cd0828b610e1b565b90505b60008b118015610ced575085610ce883611ffd565b925082105b15610db0576000610cfe838c610e1b565b90506000610d1e8d610d108789611f3a565b818118918111919091021890565b90506000610d878288610d32876002611f69565b610d3c9190611f69565b610d47896002611f69565b610d519086611fbe565b610d5b8888611f3a565b610d659190611f69565b610d6f9190611fbe565b610d818a671bc16d674ec80000611f69565b8f61156a565b9050610d93818b611fbe565b9950610d9f828f611f3a565b9d5060009550829350505050610cd3565b610dcc610dbd868d611f69565b670de0b6b3a76400008b610e71565b610dd69089611f3a565b610dfa610de161165e565b610deb908a611f69565b670de0b6b3a76400008c610e71565b9750975050505050505094509492505050565b600061028d606c6008611521565b6000610e4e610e2b846020611f69565b83610e3757607d610e3a565b606d5b60ff16610e479190611fbe565b6080611521565b9392505050565b600061028d603c6040611521565b600061028d605c6080611521565b600082600003610e945760405163677631cf60e11b815260040160405180910390fd5b501581830615171591040190565b600061028d6000611548565b600061028d6014611548565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052610f2190849061166c565b505050565b600080610f31610bfe565b841115610f51576040516314760e3760e31b815260040160405180910390fd5b6000610f5b610e0d565b90506000610f67610e55565b90506000610f7361165e565b90506000610f7f610e63565b9050600083610f968a670de0b6b3a7640000611f69565b610fa09190611f96565b9050600083610fb78a670de0b6b3a7640000611f69565b610fc19190611f96565b90506000610fcf8484611f96565b90506000610fdd8585611faa565b90506000610fec836001610e1b565b90505b60008411801561100957508861100484611ffd565b935083105b1561105957600061101b846001610e1b565b905060008061102d84848b888b6116d4565b909250905061103c828f611fbe565b9d506110488188611f3a565b965060009450829350505050610fef565b611076611066898d611f69565b670de0b6b3a76400006000610e71565b6110836110668987611f69565b61108d908e611f3a565b9a509a505050505050505050509250929050565b6000806110ac610bfe565b8411156110cc576040516314760e3760e31b815260040160405180910390fd5b60006110d6610e55565b905060006110e261165e565b905060006110ee610e63565b905060008361110589670de0b6b3a7640000611f69565b61110f9190611f96565b905060008361112689670de0b6b3a7640000611f69565b6111309190611f96565b9050600061113e8484611f96565b9050600061114c8585611faa565b90508060000361115d575083611169565b61116682611ffd565b91505b6000611176836000610e1b565b90505b6000841180156111895750600083115b156111e35760006111a661119c85612056565b9450846000610e1b565b90506000806111b883858b888b6117f0565b90925090506111c7828e611fbe565b9c506111d38188611f3a565b9650889450829350505050611179565b6112006111f0898c611f69565b670de0b6b3a76400006001610e71565b61120d6111f08987611f69565b611217908d611f3a565b9950995050505050505050509250929050565b60008061123b858560006001610c18565b915050808311156104ec579091039392505050565b60008161125d8487611fbe565b111561127c57604051634bb63a7760e11b815260040160405180910390fd5b6000611292888661128d8987611f3a565b61122a565b9050801561145b576000806000806112a8611887565b919450925090506000816112bc8486611fbe565b6112c69190611fbe565b90506000816112d58589611f69565b6112df9190611f96565b90506000826112ee858a611f69565b6112f89190611f96565b905080611305838a611f3a565b61130f9190611f3a565b60028054919850839160009061132f9084906001600160801b031661206d565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555080600260108282829054906101000a90046001600160801b0316611377919061206d565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555050505050505080846113ad9190611f3a565b935060006113b9610ea2565b905060006113c5610c0c565b90506113db6001600160a01b0382168385610eba565b6040516325a6bbf560e11b81526001600160a01b0382811660048301528d8116602483015260448201859052831690634b4d77ea906064016020604051808303816000875af1158015611432573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611456919061208d565b505050505b6114658588611f3a565b6001600160801b038481169116600160801b026fffffffffffffffffffffffffffffffff1916176001559050979650505050505050565b6000816114a98488611fbe565b11156114c857604051634bb63a7760e11b815260040160405180910390fd5b600180546001600160801b03808516600160801b0291161790556114ec8486611f3a565b600180546fffffffffffffffffffffffffffffffff19166001600160801b039290921691909117905550600095945050505050565b60008061152c611909565b9050602084820160003960005183610100031c91505092915050565b600080611553611909565b90506020838201600039505060005160601c919050565b60008260000361158d5760405163677631cf60e11b815260040160405180910390fd5b600019848609848602808210818303039150811560018114611644578583106115be5763115285766000526004601cfd5b8587890960008781038816978890049782850381900494831190950360019186900395909504018402929092176002600388028118808902820302808902820302808902820302808902820302808902820302808902909103028102861584151715810195509092908086101561163d5763115285766000526004601cfd5b5050611653565b84158683061517158683040193505b505050949350505050565b600061028d60446040611521565b60006116816001600160a01b03841683611920565b905080516000141580156116a65750808060200190518101906116a4919061208d565b155b15610f2157604051635274afe760e01b81526001600160a01b03841660048201526024015b60405180910390fd5b600080806116e28888611f3a565b9050600061172d86886116f68c6002611f69565b6117009190611f69565b61170a8986611f69565b6117149190611fbe565b6117268a671bc16d674ec80000611f69565b600061156a565b905060006117598861173f8b8d611fbe565b6117499190611f69565b671bc16d674ec800006001610e71565b905060006117678383611f3a565b90508087106117845793508361177d888a611f3a565b95506117e2565b86945060006117a0858d8c6117998a89611fbe565b600061192e565b90508060006117af878c611f69565b8c8f6117bb9190611f69565b6117c59190611fbe565b90506117dc6117d48284611f3a565b886000610e71565b98505050505b505050509550959350505050565b600080806117fe8888611f3a565b9050600061181286886116f68c6002611f69565b90508085106118265780925085935061187b565b849250600061183b838b8a6117998887611f3a565b905060006118498489611f69565b6118538a8d611f69565b61185d9190611fbe565b90508161187561186d8284611f3a565b866001610e71565b96505050505b50509550959350505050565b6000806000611894610ea2565b604051633de8682160e01b81523060048201526001600160a01b039190911690633de8682190602401606060405180830381865afa1580156118da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118fe91906120aa565b925092509250909192565b600060023803602081600039505060005160f01c90565b6060610e4e838360006119a7565b6000808061195661193f8988611f69565b61195187671bc16d674ec80000611f69565b611a44565b909250905060008061197561196b898b611f69565b6119518a8c611f69565b9150915060008061198886868686611a63565b9150915061199782828a611aa4565b9c9b505050505050505050505050565b6060814710156119cc5760405163cd78605960e01b81523060048201526024016116cb565b600080856001600160a01b031684866040516119e891906120d8565b60006040518083038185875af1925050503d8060008114611a25576040519150601f19603f3d011682016040523d82523d6000602084013e611a2a565b606091505b5091509150611a3a868383611bf5565b9695505050505050565b6000806000198385098385029250828110838203039150509250929050565b8382018481108483019081019085811090821017156000819003611a9a576040516308a942bb60e11b815260040160405180910390fd5b5094509492505050565b600082600003611abf57611ab88483611c51565b9050610e4e565b6000198303611ae1576040516308a942bb60e11b815260040160405180910390fd5b600160fe1b600160801b841060800293841b600160c01b811060400290811b600160e01b811060200290811b600160f01b811060100290811b600160f81b811060080290811b600160fc1b811060040290811b9586106002029490980192909201010194909401840185811b9561010082900381901c9290951b9190911793906000611b6d8682611c51565b600181811b8280028903608081811c600081900384810690910192821b8d831c17848106939093018481049185900493859004939093010180821c9390920680821c848110941483800291831b6001600160801b038f16179190911016929092179390911b019190910392901c9190911c808002909214841517159091019150509392505050565b606082611c0a57611c0582611d29565b610e4e565b8151158015611c2157506001600160a01b0384163b155b15611c4a57604051639996b31560e01b81526001600160a01b03851660048201526024016116cb565b5080610e4e565b600082600003611c635750600061044f565b6000611cd984600160806001600160801b0383110291821c604067ffffffffffffffff82110290811c602063ffffffff82110290811c601061ffff82110290811c600860ff82110290811c6004600f82110290811c6002600382110290811c969096119490960192909201010192909201010190565b600190811c81811b9086901c01811c80860401811c80860401811c80860401811c80860401811c80860401811c80860401901c808504811190038080029094119215159290920290920192915050565b805115611d395780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b50565b60008060408385031215611d6857600080fd5b50508035926020909101359150565b8015158114611d5257600080fd5b60008060408385031215611d9857600080fd5b823591506020830135611daa81611d77565b809150509250929050565b600060208284031215611dc757600080fd5b8135610e4e81611d77565b6020808252825182820181905260009190848201906040850190845b81811015611e0a57835183529284019291840191600101611dee565b50909695505050505050565b80356001600160a01b0381168114611e2d57600080fd5b919050565b600080600060608486031215611e4757600080fd5b611e5084611e16565b9250611e5e60208501611e16565b9150611e6c60408501611e16565b90509250925092565b60008060008060008060a08789031215611e8e57600080fd5b611e9787611e16565b9550602087013594506040870135611eae81611d77565b9350606087013567ffffffffffffffff80821115611ecb57600080fd5b818901915089601f830112611edf57600080fd5b813581811115611eee57600080fd5b8a6020828501011115611f0057600080fd5b602083019550809450505050611f1860808801611e16565b90509295509295509295565b634e487b7160e01b600052601160045260246000fd5b8181038181111561044f5761044f611f24565b6000600160ff1b8201611f6257611f62611f24565b5060000390565b808202811582820484141761044f5761044f611f24565b634e487b7160e01b600052601260045260246000fd5b600082611fa557611fa5611f80565b500490565b600082611fb957611fb9611f80565b500690565b8082018082111561044f5761044f611f24565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006001820161200f5761200f611f24565b5060010190565b6001600160801b0382811682821603908082111561203657612036611f24565b5092915050565b60006020828403121561204f57600080fd5b5051919050565b60008161206557612065611f24565b506000190190565b6001600160801b0381811683821601908082111561203657612036611f24565b60006020828403121561209f57600080fd5b8151610e4e81611d77565b6000806000606084860312156120bf57600080fd5b8351925060208401519150604084015190509250925092565b6000825160005b818110156120f957602081860181015185830152016120df565b50600092019182525091905056fea264697066735822122053777c5bc040cb6fa9c333a18b8fb52c7e46cd01ef26680bf89718e9267db6f264736f6c63430008140033",
    "sourceMap": "689:16826:52:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2868:136;;;:::i;:::-;;;;188:25:90;;;244:2;229:18;;222:34;;;;161:18;2868:136:52;;;;;;;;2322:126;;;:::i;:::-;;;413:25:90;;;401:2;386:18;2322:126:52;267:177:90;2114:103:52;;;:::i;:::-;;;-1:-1:-1;;;;;613:55:90;;;595:74;;583:2;568:18;2114:103:52;449:226:90;1525:840:75;;;;;;:::i;:::-;;:::i;3260:824:52:-;;;;;;:::i;:::-;;:::i;4262:328::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1355:250::-;;;:::i;:::-;;1704:97;;;:::i;1906:101::-;;;:::i;9766:818::-;;;;;;:::i;:::-;;:::i;2863:863:75:-;;;;;;:::i;:::-;;:::i;2541:105:52:-;;;:::i;4740:170::-;4858:21;;-1:-1:-1;;;;;4858:21:52;;;;-1:-1:-1;;;4881:21:52;;;4740:170;;5251:693;;;;;;:::i;:::-;;:::i;:::-;;;;3552:25:90;;;3608:2;3593:18;;3586:34;;;;3636:18;;;3629:34;3540:2;3525:18;5251:693:52;3354:315:90;6792:2707:52;;;;;;:::i;:::-;;:::i;2868:136::-;2923:19;2944:20;2983:14;11845:12;;-1:-1:-1;;;;;;;;11845:12:52;;;;;11859:13;;;11762:118;2983:14;2976:21;;;;2868:136;;:::o;2322:126::-;2429:12;;2386:7;;-1:-1:-1;;;2429:12:52;;-1:-1:-1;;;;;2429:12:52;2412:14;:12;:14::i;:::-;:29;;;;:::i;:::-;2405:36;;2322:126;:::o;2114:103::-;2171:7;2197:13;:11;:13::i;1525:840:75:-;1656:28;1686:23;1729:15;1748:1;1729:20;1725:39;;-1:-1:-1;1759:1:75;;-1:-1:-1;1759:1:75;1751:13;;1725:39;1775:13;1791:19;;;;1775:13;1791:19;1858:134;;1932:33;1949:15;1932:6;:33;:::i;:::-;1975:15;1858:134;;;1882:6;1898:16;1899:15;1898:16;:::i;:::-;1821:171;;;;2004:18;2024:19;2047:53;2063:10;2075:4;2081:8;2091;2047:15;:53::i;:::-;2003:97;;;;-1:-1:-1;;;;;2129:11:75;2116:10;:24;2115:54;2111:96;;;2178:29;;-1:-1:-1;;;2178:29:75;;;;;;;;;;;2111:96;2243:1;2225:15;:19;:133;;2317:19;2325:10;2317:19;:::i;:::-;2345:11;2225:133;;;2267:10;2280:20;2288:11;2280:20;:::i;:::-;2218:140;;;;;;;;;1525:840;;;;;;:::o;3260:824:52:-;3353:7;3372:19;3394:14;:12;:14::i;:::-;3372:36;-1:-1:-1;3435:8:52;;3458:32;;;3454:212;;3530:11;3510:17;:31;3506:80;;;3550:36;;-1:-1:-1;;;3550:36:52;;;;;;;;;;;3506:80;3607:48;3643:1;3620:20;:18;:20::i;:::-;:24;;;;:::i;:::-;3646:8;3607:12;:48::i;:::-;3600:55;;;;;;3454:212;3728:16;:14;:16::i;:::-;3696:29;828:4;3696:17;:29;:::i;:::-;:48;;;;:::i;:::-;3676:68;;3754:19;3776:14;:12;:14::i;:::-;3754:36;-1:-1:-1;3801:9:52;3813:31;3754:36;3813:17;:31;:::i;:::-;3801:43;-1:-1:-1;3854:14:52;3871:31;3891:11;3871:17;:31;:::i;:::-;3854:48;;3913:10;3926:25;3939:1;3942:8;3926:12;:25::i;:::-;3913:38;-1:-1:-1;3961:10:52;3974:29;3987:5;:1;3991;3987:5;:::i;:::-;3994:8;3974:12;:29::i;:::-;3961:42;-1:-1:-1;4026:51:52;4047:6;4036:7;4041:2;3961:42;4036:7;:::i;:::-;4035:18;;;;:::i;:::-;4055:11;4068:8;4026;:51::i;:::-;4021:56;;:2;:56;:::i;:::-;4014:63;;;;;;;;;3260:824;;;;;:::o;4262:328::-;4332:16;4360:14;4377:20;:18;:20::i;:::-;4360:37;;4408:23;4448:6;4434:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4434:21:52;;4408:47;;4471:9;4466:94;4486:6;4482:1;:10;4466:94;;;4525:24;4538:1;4541:7;4525:12;:24::i;:::-;4513:6;4520:1;4513:9;;;;;;;;:::i;:::-;;;;;;;;;;:36;4494:3;;;:::i;:::-;;;4466:94;;;-1:-1:-1;4577:6:52;4262:328;-1:-1:-1;;;4262:328:52:o;1355:250::-;1423:10;:8;:10::i;:::-;-1:-1:-1;;;;;1409:24:52;:10;-1:-1:-1;;;;;1409:24:52;;1405:60;;1442:23;;-1:-1:-1;;;1442:23:52;;;;;;;;;;;1405:60;1479:6;;:11;1475:54;;1499:30;;-1:-1:-1;;;1499:30:52;;;;;;;;;;;1475:54;1549:1;1540:6;:10;1583:14;:12;:14::i;:::-;1560:12;:38;;-1:-1:-1;;;;;1560:38:52;;;-1:-1:-1;;;1560:38:52;;;;;;;;;1355:250::o;1704:97::-;1758:7;1784:10;:8;:10::i;1906:101::-;1962:7;1988:12;:10;:12::i;9766:818::-;9907:19;1201:11;;1211:1;1201:11;;;;;;1200:17;:22;1196:60;;1231:25;;-1:-1:-1;;;1231:25:52;;;;;;;;;;;1196:60;9960:10:::1;:8;:10::i;:::-;-1:-1:-1::0;;;;;9946:24:52::1;:10;-1:-1:-1::0;;;;;9946:24:52::1;;9942:60;;9979:23;;-1:-1:-1::0;;;9979:23:52::1;;;;;;;;;;;9942:60;10027:7;-1:-1:-1::0;;;;;10017:17:52::1;:6;-1:-1:-1::0;;;;;10017:17:52::1;::::0;10013:122:::1;;-1:-1:-1::0;10064:21:52::1;::::0;;-1:-1:-1;;;;;10099:25:52;;::::1;::::0;;;-1:-1:-1;;;10064:21:52;::::1;;10013:122;10159:7;-1:-1:-1::0;;;;;10149:17:52::1;:6;-1:-1:-1::0;;;;;10149:17:52::1;::::0;10145:123:::1;;10197:21;::::0;10182:36:::1;::::0;-1:-1:-1;;;;;10197:21:52::1;10182:36:::0;::::1;:::i;:::-;10232:21;:25:::0;;-1:-1:-1;;10232:25:52::1;::::0;;10182:36;-1:-1:-1;10145:123:52::1;10282:15:::0;;10278:271:::1;;10313:13;:37:::0;;10338:11;;10313:13;::::1;::::0;:37:::1;::::0;10338:11;;-1:-1:-1;;;;;10313:37:52::1;;:::i;:::-;;;;;;;;-1:-1:-1::0;;;;;10313:37:52::1;;;;;-1:-1:-1::0;;;;;10313:37:52::1;;;;;;10365:17;10392:13;:11;:13::i;:::-;10365:41:::0;-1:-1:-1;10421:44:52::1;-1:-1:-1::0;;;;;10421:23:52;::::1;10445:6:::0;10453:11;10421:23:::1;:44::i;:::-;10518:6;-1:-1:-1::0;;;;;10485:53:52::1;10505:10;-1:-1:-1::0;;;;;10485:53:52::1;;10526:11;10485:53;;;;413:25:90::0;;401:2;386:18;;267:177;10485:53:52::1;;;;;;;;10299:250;10278:271;1277:6:::0;:11;;1287:1;1277:11;;;9766:818;;-1:-1:-1;;;9766:818:52:o;2863:863:75:-;2994:22;3018:29;3067:16;3087:1;3067:21;3063:40;;-1:-1:-1;3098:1:75;;-1:-1:-1;3098:1:75;3090:13;;3063:40;3114:18;3142:19;3194:1;3175:16;:20;3171:442;;;3239:52;3257:6;3273:16;3239:17;:52::i;:::-;3211:80;;-1:-1:-1;3211:80:75;-1:-1:-1;3350:19:75;3211:80;3350:19;:::i;:::-;3305:86;-1:-1:-1;3378:11:75;-1:-1:-1;3378:11:75;3171:442;;;3450:52;3467:6;3483:17;3484:16;3483:17;:::i;:::-;3450:16;:52::i;:::-;3422:80;;-1:-1:-1;3422:80:75;-1:-1:-1;3422:80:75;3581:20;3422:80;3581:20;:::i;:::-;3516:86;;-1:-1:-1;3516:86:75;-1:-1:-1;3171:442:75;-1:-1:-1;;;;;3641:11:75;3628:10;:24;3627:54;3623:96;;;3690:29;;-1:-1:-1;;;3690:29:75;;;;;;;;;;;3623:96;3053:673;;2863:863;;;;;:::o;2541:105:52:-;2599:7;2625:14;:12;:14::i;5251:693::-;5374:22;5398:23;5423:17;5460:11;5475:1;5460:16;5456:51;;5485:22;;-1:-1:-1;;;5485:22:52;;;;;;;;;;;5456:51;5563:12;;5518:25;;-1:-1:-1;;;5563:12:52;;-1:-1:-1;;;;;5563:12:52;5546:14;:12;:14::i;:::-;:29;;;;:::i;:::-;5518:57;-1:-1:-1;5639:1:52;5625:15;;5624:28;;;;:159;;5733:50;5752:17;5771:11;5733:18;:50::i;:::-;5624:159;;;5667:51;5687:17;5706:11;5667:19;:51::i;:::-;5586:197;;-1:-1:-1;5586:197:52;-1:-1:-1;5817:1:52;5798:20;;5794:144;;;5846:81;5855:17;5882:16;5883:15;5882:16;:::i;:::-;5909;5846:8;:81::i;:::-;5834:93;;5794:144;5446:498;5251:693;;;;;:::o;6792:2707::-;6970:22;1201:11;;1211:1;1201:11;;;;;;6970:22;;1200:17;:22;1196:60;;1231:25;;-1:-1:-1;;;1231:25:52;;;;;;;;;;;1196:60;-1:-1:-1;;;;;7037:23:52;::::1;7033:64;;7069:28;;-1:-1:-1::0;;;7069:28:52::1;;;;;;;;;;;7033:64;7111:11;7126:1;7111:16:::0;7107:51:::1;;7136:22;;-1:-1:-1::0;;;7136:22:52::1;;;;;;;;;;;7107:51;7170:19;7191:20:::0;7215:14:::1;11845:12:::0;;-1:-1:-1;;;;;;;;11845:12:52;;;;;11859:13;;;11762:118;7215:14:::1;7169:60;;;;7239:25;7284:11;7267:14;:12;:14::i;:::-;:28;;;;:::i;:::-;7239:56:::0;-1:-1:-1;7359:1:52::1;7345:15:::0;::::1;7344:28:::0;::::1;;;:159;;7453:50;7472:17;7491:11;7453:18;:50::i;:::-;7344:159;;;7387:51;7407:17;7426:11;7387:19;:51::i;:::-;7306:197:::0;;-1:-1:-1;7306:197:52;-1:-1:-1;7515:14:52::1;::::0;;;7595:7;:237:::1;;4037:3:73::0;4033:11;;;4066:12;;;4062:23;4037:3;4033:11;;;4066:12;;;4062:23;7795:12:52::1;:10;:12::i;:::-;7817:13;:11;:13::i;:::-;7595:237;;;4037:3:73::0;4033:11;;;4066:12;;;4062:23;4037:3;4033:11;;;4066:12;;;4062:23;7680:13:52::1;:11;:13::i;:::-;7703:12;:10;:12::i;:::-;7514:318;;;;;;;;7856:1;7847:6;:10;7843:67;;;7859:51;7892:9;7903:6;7866:11;-1:-1:-1::0;;;;;7859:32:52::1;;;:51;;;;;:::i;:::-;7924:15:::0;;7920:1033:::1;;7955:18;7986:17;7992:4:::0;7986:3:::1;:17;:::i;:::-;7976:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;7976:28:52::1;;7955:49;;8018:15;8089:10;8082:5;8075:25;8187:15;8182:2;8175:5;8171:14;8164:39;8243:16;8238:2;8231:5;8227:14;8220:40;8300:2;8295::::0;8288:5:::1;8284:14;8277:26;8344:11;8338:3;8331:5;8327:15;8320:36;8416:11;8403;8397:3;8390:5;8386:15;8373:55;8524:1;8521;8507:11;8502:3;8498:21;8490:5;8486:2;8482:14;8479:1;8469:8;8462:5;8457:69;8446:80:::0;-1:-1:-1;8446:80:52;8575:133;;::::1;;8798:10;8793:1;8787:8;8782:3;8778:18;8775:34;8771:1;8753:16;8750:23;8746:64;8735:75;;8544:268;;8575:133;8625:16;8622:1;8619::::0;8604:38:::1;8673:16;8670:1;8663:27;8544:268;;8890:7;8901:1;8890:12:::0;8886:56:::1;;8911:31;;-1:-1:-1::0;;;8911:31:52::1;;;;;;;;;;;8886:56;7941:1012;;7920:1033;9022:39;::::0;-1:-1:-1;;;9022:39:52;;9055:4:::1;9022:39;::::0;::::1;595:74:90::0;8963:17:52::1;::::0;;;-1:-1:-1;;;;;9022:24:52;::::1;::::0;::::1;::::0;568:18:90;;9022:39:52::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9004:57:::0;-1:-1:-1;;;;;;9079:27:52;::::1;9075:67;;;9115:27;;-1:-1:-1::0;;;9115:27:52::1;;;;;;;;;;;9075:67;9169:7;:224;;9289:104;9310:8;9320:17;9339:11;9352:12;9366:6;9374:9;9385:7;9289:20;:104::i;:::-;9169:224;;;9195:75;9216:11;9229:12;9243:6;9251:9;9262:7;9195:20;:75::i;:::-;9157:236;;8990:414;9436:9;-1:-1:-1::0;;;;;9419:73:52::1;9424:10;-1:-1:-1::0;;;;;9419:73:52::1;;9447:15;9464:16;9482:9;9419:73;;;;;;;3552:25:90::0;;;3608:2;3593:18;;3586:34;;;;3651:2;3636:18;;3629:34;3540:2;3525:18;;3354:315;9419:73:52::1;;;;;;;;-1:-1:-1::0;;1277:6:52;:11;;1287:1;1277:11;;;-1:-1:-1;6792:2707:52;;;;-1:-1:-1;6792:2707:52;;-1:-1:-1;;;;;;;;;;6792:2707:52:o;16233:106::-;16289:7;16315:17;16324:2;16328:3;16315:8;:17::i;15545:94::-;15591:7;15617:15;15629:2;15617:11;:15::i;4394:1467:75:-;4531:24;4557:19;4605:14;:12;:14::i;:::-;4596:6;:23;4592:70;;;4628:34;;-1:-1:-1;;;4628:34:75;;;;;;;;;;;4592:70;4673:14;4690:20;:18;:20::i;:::-;4673:37;;4721:21;4745:16;:14;:16::i;:::-;4721:40;;4771:19;4793:14;:12;:14::i;:::-;4771:36;-1:-1:-1;4818:20:75;4857:13;4841;:6;4850:4;4841:13;:::i;:::-;:29;;;;:::i;:::-;4899:10;;-1:-1:-1;4818:52:75;-1:-1:-1;4953:13:75;4933:17;4899:10;4946:4;4933:17;:::i;:::-;:33;;;;:::i;:::-;4920:46;-1:-1:-1;4977:9:75;4989:26;5004:11;4989:12;:26;:::i;:::-;4977:38;-1:-1:-1;5040:26:75;5055:11;5040:12;:26;:::i;:::-;5025:41;;5077:10;5090:25;5103:1;5106:8;5090:12;:25::i;:::-;5077:38;;5126:545;5146:1;5133:10;:14;:30;;;;-1:-1:-1;5157:6:75;5151:3;;;:::i;:::-;;;;:12;5133:30;5126:545;;;5179:10;5192:25;5205:1;5208:8;5192:12;:25::i;:::-;5179:38;-1:-1:-1;5232:17:75;5252:48;5261:10;5273:26;5287:12;5273:11;:26;:::i;:::-;3385:9:73;;;3396:8;;-1:-1:-1;3381:24:73;;;;3374:32;;3267:155;5252:48:75;5232:68;-1:-1:-1;5314:18:75;5335:196;5232:68;5445:11;5436:6;5440:2;5436:1;:6;:::i;:::-;:20;;;;:::i;:::-;5416:16;5420:12;5416:1;:16;:::i;:::-;5404:28;;:9;:28;:::i;:::-;5392:7;5397:2;5392;:7;:::i;:::-;5391:42;;;;:::i;:::-;:65;;;;:::i;:::-;5474:18;5481:11;5474:4;:18;:::i;:::-;5510:7;5335:11;:196::i;:::-;5314:217;-1:-1:-1;5546:25:75;5314:217;5546:25;;:::i;:::-;;-1:-1:-1;5585:23:75;5599:9;5585:23;;:::i;:::-;;;5638:1;5623:16;;5658:2;5653:7;;5165:506;;;5126:545;;;5721:53;5730:28;5745:13;5731:10;5730:28;:::i;:::-;5760:4;5766:7;5721:8;:53::i;:::-;5702:72;;:16;:72;:::i;:::-;5788:56;5811:17;:15;:17::i;:::-;5797:31;;:11;:31;:::i;:::-;5830:4;5836:7;5788:8;:56::i;:::-;5681:173;;;;;;;;;;4394:1467;;;;;;;:::o;16705:111:52:-;16767:7;16793:16;16802:3;16807:1;16793:8;:16::i;17354:159::-;17434:7;17460:46;17494:6;:1;17498:2;17494:6;:::i;:::-;17470:8;:20;;17487:3;17470:20;;;17481:3;17470:20;17469:31;;;;;;:::i;:::-;17502:3;17460:8;:46::i;:::-;17453:53;17354:159;-1:-1:-1;;;17354:159:52:o;15766:107::-;15824:7;15850:16;15859:2;15863;15850:8;:16::i;16462:106::-;16518:7;16544:17;16553:2;16557:3;16544:8;:17::i;4369:251:73:-;4441:9;4466:1;4471;4466:6;4462:41;;4481:22;;-1:-1:-1;;;4481:22:73;;;;;;;;;;;4462:41;-1:-1:-1;4586:15:73;4574:9;;;4567:17;4564:38;4557:46;4546:9;;4542:62;;4369:251::o;15090:90:52:-;15133:7;15159:14;15171:1;15159:11;:14::i;15315:93::-;15360:7;15386:15;15398:2;15386:11;:15::i;1303:160:44:-;1412:43;;;-1:-1:-1;;;;;6689:55:90;;1412:43:44;;;6671:74:90;6761:18;;;;6754:34;;;1412:43:44;;;;;;;;;;6644:18:90;;;;1412:43:44;;;;;;;;;;-1:-1:-1;;;1412:43:44;;;1385:71;;1405:5;;1385:19;:71::i;:::-;1303:160;;;:::o;6308:1250:75:-;6419:18;6439:25;6493:14;:12;:14::i;:::-;6484:6;:23;6480:70;;;6516:34;;-1:-1:-1;;;6516:34:75;;;;;;;;;;;6480:70;6561:14;6578:20;:18;:20::i;:::-;6561:37;;6609:21;6633:16;:14;:16::i;:::-;6609:40;;6659:22;6684:17;:15;:17::i;:::-;6659:42;;6712:19;6734:14;:12;:14::i;:::-;6712:36;-1:-1:-1;6759:20:75;6798:13;6782;:6;6791:4;6782:13;:::i;:::-;:29;;;;:::i;:::-;6759:52;-1:-1:-1;6821:22:75;6867:14;6846:18;:11;6860:4;6846:18;:::i;:::-;:35;;;;:::i;:::-;6821:60;-1:-1:-1;6892:9:75;6904:26;6919:11;6904:12;:26;:::i;:::-;6892:38;-1:-1:-1;6940:12:75;6955:26;6970:11;6955:12;:26;:::i;:::-;6940:41;;6992:10;7005:21;7018:1;7021:4;7005:12;:21::i;:::-;6992:34;;7037:342;7061:1;7044:14;:18;:34;;;;-1:-1:-1;7072:6:75;7066:3;;;:::i;:::-;;;;:12;7044:34;7037:342;;;7094:10;7107:21;7120:1;7123:4;7107:12;:21::i;:::-;7094:34;;7144:17;7163:18;7185:59;7202:2;7206;7210:11;7223:4;7229:14;7185:16;:59::i;:::-;7143:101;;-1:-1:-1;7143:101:75;-1:-1:-1;7259:23:75;7143:101;7259:23;;:::i;:::-;;-1:-1:-1;7296:28:75;7314:10;7296:28;;:::i;:::-;;;7346:1;7339:8;;7366:2;7361:7;;7080:299;;;7037:342;;;7410:49;7419:26;7432:13;7419:10;:26;:::i;:::-;7447:4;7453:5;7410:8;:49::i;:::-;7487:54;7496:31;7513:14;7496;:31;:::i;7487:54::-;7473:68;;:11;:68;:::i;:::-;7389:162;;;;;;;;;;;;;6308:1250;;;;;:::o;8001:1267::-;8111:18;8131:25;8185:14;:12;:14::i;:::-;8176:6;:23;8172:70;;;8208:34;;-1:-1:-1;;;8208:34:75;;;;;;;;;;;8172:70;8253:21;8277:16;:14;:16::i;:::-;8253:40;;8303:22;8328:17;:15;:17::i;:::-;8303:42;;8356:19;8378:14;:12;:14::i;:::-;8356:36;-1:-1:-1;8403:20:75;8442:13;8426;:6;8435:4;8426:13;:::i;:::-;:29;;;;:::i;:::-;8403:52;-1:-1:-1;8465:22:75;8511:14;8490:18;:11;8504:4;8490:18;:::i;:::-;:35;;;;:::i;:::-;8465:60;-1:-1:-1;8536:9:75;8548:26;8563:11;8548:12;:26;:::i;:::-;8536:38;-1:-1:-1;8584:12:75;8599:26;8614:11;8599:12;:26;:::i;:::-;8584:41;;8640:4;8648:1;8640:9;8636:51;;-1:-1:-1;8658:11:75;8636:51;;;8684:3;;;:::i;:::-;;;8636:51;8698:10;8711:22;8724:1;8727:5;8711:12;:22::i;:::-;8698:35;;8744:347;8768:1;8751:14;:18;:27;;;;;8777:1;8773;:5;8751:27;8744:347;;;8794:10;8807:24;8820:3;;;:::i;:::-;;;;8825:5;8807:12;:24::i;:::-;8794:37;;8847:17;8866:18;8888:58;8904:2;8908;8912:11;8925:4;8931:14;8888:15;:58::i;:::-;8846:100;;-1:-1:-1;8846:100:75;-1:-1:-1;8961:23:75;8846:100;8961:23;;:::i;:::-;;-1:-1:-1;8998:28:75;9016:10;8998:28;;:::i;:::-;;;9048:11;9041:18;;9078:2;9073:7;;8780:311;;;8744:347;;;9122:48;9131:26;9144:13;9131:10;:26;:::i;:::-;9159:4;9165;9122:8;:48::i;:::-;9198:53;9207:31;9224:14;9207;:31;:::i;9198:53::-;9184:67;;:11;:67;:::i;:::-;9101:160;;;;;;;;;;;;8001:1267;;;;;:::o;10825:407:52:-;10958:17;10994:22;11020:59;11036:17;11055:10;11067:5;11074:4;11020:15;:59::i;:::-;10991:88;;;11108:14;11094:11;:28;11090:136;;;11173:28;;;;10825:407;-1:-1:-1;;;10825:407:52:o;12906:1478::-;13161:7;13211:12;13184:24;13199:9;13184:12;:24;:::i;:::-;:39;13180:82;;;13232:30;;-1:-1:-1;;;13232:30:52;;;;;;;;;;;13180:82;13273:17;13293:64;13302:17;13321:6;13329:27;13344:12;13329;:27;:::i;:::-;13293:8;:64::i;:::-;13273:84;-1:-1:-1;13372:13:52;;13368:881;;13401:12;13446:21;13469:20;13491;13515:15;:13;:15::i;:::-;13445:85;;-1:-1:-1;13445:85:52;-1:-1:-1;13445:85:52;-1:-1:-1;13549:18:52;13445:85;13570:28;13445:85;;13570:28;:::i;:::-;:43;;;;:::i;:::-;13549:64;-1:-1:-1;13632:19:52;13549:64;13654:24;13666:12;13654:9;:24;:::i;:::-;:37;;;;:::i;:::-;13632:59;-1:-1:-1;13709:19:52;13758:10;13731:24;13743:12;13731:9;:24;:::i;:::-;:37;;;;:::i;:::-;13709:59;-1:-1:-1;13709:59:52;13793:23;13805:11;13793:9;:23;:::i;:::-;:37;;;;:::i;:::-;13849:21;:45;;13786:44;;-1:-1:-1;13882:11:52;;13849:21;;:45;;13882:11;;-1:-1:-1;;;;;13849:45:52;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;13849:45:52;;;;;-1:-1:-1;;;;;13849:45:52;;;;;;13945:11;13912:21;;:45;;;;;;;;;;-1:-1:-1;;;;;13912:45:52;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;13912:45:52;;;;;-1:-1:-1;;;;;13912:45:52;;;;;;13427:545;;;;;;14002:4;13986:20;;;;;:::i;:::-;;;14021:15;14039:10;:8;:10::i;:::-;14021:28;;14063:18;14084:13;:11;:13::i;:::-;14063:34;-1:-1:-1;14112:46:52;-1:-1:-1;;;;;14112:31:52;;14144:7;14153:4;14112:31;:46::i;:::-;14172:66;;-1:-1:-1;;;14172:66:52;;-1:-1:-1;;;;;7423:15:90;;;14172:66:52;;;7405:34:90;7475:15;;;7455:18;;;7448:43;7507:18;;;7500:34;;;14172:38:52;;;;;7317:18:90;;14172:66:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13387:862;;;13368:881;14282:20;14296:6;14282:11;:20;:::i;:::-;-1:-1:-1;;;;;14313:37:52;;;14259:44;;-1:-1:-1;;;14259:44:52;-1:-1:-1;;14313:37:52;;14259:12;14313:37;14368:9;-1:-1:-1;12906:1478:52;;;;;;;;;:::o;12182:420::-;12375:7;12424:11;12398:23;12412:9;12398:11;:23;:::i;:::-;:37;12394:80;;;12444:30;;-1:-1:-1;;;12444:30:52;;;;;;;;;;;12394:80;12485:12;:35;;-1:-1:-1;;;;;12485:35:52;;;-1:-1:-1;;;12485:35:52;;;;;;12554:21;12569:6;12554:12;:21;:::i;:::-;12530:13;:46;;-1:-1:-1;;12530:46:52;-1:-1:-1;;;;;12530:46:52;;;;;;;;;;-1:-1:-1;;;12182:420:52;-1:-1:-1;;;;;12182:420:52:o;1595:268:70:-;1667:13;1692:14;1709:12;:10;:12::i;:::-;1692:29;;1791:4;1779:9;1771:6;1767:22;1764:1;1755:41;1844:1;1838:8;1831:4;1826:3;1822:14;1818:29;1809:38;;1741:116;1595:268;;;;:::o;502:247::-;565:13;590:14;607:12;:10;:12::i;:::-;590:29;;689:4;677:9;669:6;665:22;662:1;653:41;-1:-1:-1;;730:1:70;724:8;720:2;716:17;;502:247;-1:-1:-1;502:247:70:o;5299:4288:73:-;5395:14;5425:11;5440:1;5425:16;5421:51;;5450:22;;-1:-1:-1;;;5450:22:73;;;;;;;;;;;5421:51;-1:-1:-1;;5807:1:73;5804;5797:20;5850:1;5847;5843:9;5905:5;5901:2;5898:13;5890:5;5886:2;5882:14;5878:34;5865:47;;6002:5;5995:13;6026:1;6021:139;;;;6310:11;6303:5;6300:22;6290:172;;6359:10;6353:4;6346:24;6404:4;6398;6391:18;6290:172;6649:11;6646:1;6643;6636:25;7080:1;7076:19;;;7059:37;;7179:25;;;;;6810:21;;;7283:19;;;6763:20;;;6752:32;;;7471:1;7444:15;;;;7440:29;;;;7436:37;7565:19;;7555:30;;;;7957:1;7940;7936:19;;7932:27;;8217:25;;;8210:33;;8197:47;8311:25;;;8304:33;;8291:47;8406:25;;;8399:33;;8386:47;8501:25;;;8494:33;;8481:47;8596:25;;;8589:33;;8576:47;8692:25;;;8685:33;;;8672:47;9197:19;;9295:15;;9276:17;;9273:38;9266:46;9243:70;;;-1:-1:-1;7555:30:73;;9276:17;9389:29;;;9386:171;;;9454:10;9448:4;9441:24;9499:4;9493;9486:18;9386:171;;;5988:3583;;6021:139;6135:7;6128:15;6113:11;6106:5;6102:23;6095:31;6092:52;6085:60;6071:11;6064:5;6060:23;6056:90;6046:100;;5988:3583;;;;5299:4288;;;;;;:::o;16002:108:52:-;16061:7;16087:16;16096:2;16100;16087:8;:16::i;4059:629:44:-;4478:23;4504:33;-1:-1:-1;;;;;4504:27:44;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;-1:-1:-1;;;4631:40:44;;-1:-1:-1;;;;;613:55:90;;4631:40:44;;;595:74:90;568:18;;4631:40:44;;;;;;;;9977:937:75;10133:17;;;10199:7;10204:2;10199;:7;:::i;:::-;10186:20;-1:-1:-1;10217:20:75;10240:78;10252:4;10279:11;10270:6;10274:2;10270:1;:6;:::i;:::-;:20;;;;:::i;:::-;10258:9;10263:4;10258:2;:9;:::i;:::-;:32;;;;:::i;:::-;10292:18;10299:11;10292:4;:18;:::i;:::-;10312:5;10240:11;:78::i;:::-;10217:101;-1:-1:-1;10328:17:75;10348:45;10369:11;10358:7;10363:2;10358;:7;:::i;:::-;10357:23;;;;:::i;:::-;10382:4;10388;10348:8;:45::i;:::-;10328:65;-1:-1:-1;10404:16:75;10423:24;10435:12;10328:65;10423:24;:::i;:::-;10404:43;;10480:8;10462:14;:26;10458:450;;10517:8;-1:-1:-1;10517:8:75;10551:18;10565:4;10551:11;:18;:::i;:::-;10539:30;;10458:450;;;10613:14;;-1:-1:-1;10641:24:75;10668:75;10689:2;10693;10697:11;10710:25;10613:14;10710:12;:25;:::i;:::-;10737:5;10668:20;:75::i;:::-;10641:102;-1:-1:-1;10641:102:75;10758:10;10833:9;10840:2;10833:4;:9;:::i;:::-;10819:11;10814:2;:16;;;;:::i;:::-;:28;;;;:::i;:::-;10801:41;-1:-1:-1;10869:28:75;10878:7;10801:41;10878:2;:7;:::i;:::-;10887:2;10891:5;10869:8;:28::i;:::-;10857:40;;10586:322;;;10458:450;10176:738;;;;9977:937;;;;;;;;:::o;11623:800::-;11778:17;;;11844:7;11849:2;11844;:7;:::i;:::-;11831:20;-1:-1:-1;11861:20:75;11884:78;11896:4;11923:11;11914:6;11918:2;11914:1;:6;:::i;11884:78::-;11861:101;;11995:12;11977:14;:30;11973:444;;12036:12;12023:25;;12074:4;12062:16;;11973:444;;;12122:14;;-1:-1:-1;12151:24:75;12178:75;12199:2;12203;12207:11;12220:25;12122:14;12220:12;:25;:::i;12178:75::-;12151:102;-1:-1:-1;12268:10:75;12300:9;12307:2;12300:4;:9;:::i;:::-;12281:16;12286:11;12281:2;:16;:::i;:::-;:28;;;;:::i;:::-;12268:41;-1:-1:-1;12336:16:75;12379:27;12388:7;12336:16;12268:41;12388:7;:::i;:::-;12397:2;12401:4;12379:8;:27::i;:::-;12367:39;;12095:322;;;11973:444;11821:602;;11623:800;;;;;;;;:::o;11443:219:52:-;11515:21;11538:20;11560;11614:10;:8;:10::i;:::-;11603:52;;-1:-1:-1;;;11603:52:52;;11649:4;11603:52;;;595:74:90;-1:-1:-1;;;;;11603:37:52;;;;;;;568:18:90;;11603:52:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11596:59;;;;;;11443:219;;;:::o;2022:223:70:-;2067:14;2143:4;2131:10;2127:21;2181:4;2176:3;2170:4;2161:25;-1:-1:-1;;2226:1:70;2220:8;2214:4;2210:19;;2022:223::o;2705:151:45:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;13049:486:75:-;13207:24;;;13276:50;13288:16;13302:2;13288:11;:16;:::i;:::-;13306:19;:12;13321:4;13306:19;:::i;:::-;13276:11;:50::i;:::-;13247:79;;-1:-1:-1;13247:79:75;-1:-1:-1;13337:11:75;;13365:47;13377:16;13382:11;13377:2;:16;:::i;:::-;13395;13400:11;13395:2;:16;:::i;13365:47::-;13336:76;;;;13424:10;13436;13450:31;13462:3;13467;13472;13477;13450:11;:31::i;:::-;13423:58;;;;13499:29;13512:2;13516;13520:7;13499:12;:29::i;:::-;13492:36;13049:486;-1:-1:-1;;;;;;;;;;;;13049:486:75:o;3180:392:45:-;3279:12;3331:5;3307:21;:29;3303:108;;;3359:41;;-1:-1:-1;;;3359:41:45;;3394:4;3359:41;;;595:74:90;568:18;;3359:41:45;449:226:90;3303:108:45;3421:12;3435:23;3462:6;-1:-1:-1;;;;;3462:11:45;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;3180:392;-1:-1:-1;;;;;;3180:392:45:o;9833:239:73:-;9894:10;;-1:-1:-1;;9971:1:73;9968;9961:20;10007:1;10004;10000:9;9994:15;;10052:2;10048;10045:10;10040:2;10036;10032:11;10028:28;10022:34;;;9833:239;;;;;:::o;10484:422::-;10696:11;;;10735:10;;;10665:11;;;10726:20;;;;10781:11;;;10794;;;10778:28;10771:36;10571:10;10857:12;;;10853:46;;10878:21;;-1:-1:-1;;;10878:21:73;;;;;;;;;;;10853:46;10595:311;10484:422;;;;;;;:::o;11513:3478::-;11591:9;11616:2;11622:1;11616:7;11612:37;;11632:17;11637:2;11641:7;11632:4;:17::i;:::-;11625:24;;;;11612:37;-1:-1:-1;;11663:2:73;:23;11659:57;;11695:21;;-1:-1:-1;;;11695:21:73;;;;;;;;;;;11659:57;-1:-1:-1;;;;;;11966:43:73;;12011:3;11962:53;12034:10;;;-1:-1:-1;;;12090:59:73;;12151:2;12086:68;12173:10;;;-1:-1:-1;;;12241:67:73;;12310:2;12237:76;12332:10;;;-1:-1:-1;;;12400:71:73;;12473:2;12396:80;12495:10;;;-1:-1:-1;;;12563:73:73;;12638:1;12559:81;12659:10;;;-1:-1:-1;;;12727:74:73;;12803:1;12723:82;12824:10;;;12892:74;;;12968:1;12888:82;12205:13;;;;12364;;;;12527;12691;12856;;;;13021;;13105:14;;;;13069:3;13065:15;;;13061:24;;;12989:10;;;;13054:32;;;;;11809:2;11795:11;13152:15;13054:32;11795:11;13152:4;:15::i;:::-;13363:1;13359:10;;;13236:11;;;13228:20;;13311:3;13873:12;;;13911:78;;;;14072:13;;;14061:25;;;13293:12;;;13307;;;13290:30;13461:15;;;14054:33;;;;14116:13;;;14018;;;;13398:15;;;;14011:21;;;;14109;14679:11;;;14152:13;;;;14713:11;;;14752:10;;;14768;;14640:9;;;14544:11;;;-1:-1:-1;;;;;14557:43:73;;14541:60;14780:10;;;;14764:27;14749:43;;;;14192:12;;;;14188:20;14742:51;;;;14838:13;;;14834:21;;;;14915:9;;;14912:18;;;14932:15;;14909:39;14902:47;14895:55;;;;-1:-1:-1;;11513:3478:73;;;;;:::o;4625:582:45:-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:45;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:45;;-1:-1:-1;;;;;613:55:90;;5121:24:45;;;595:74:90;568:18;;5121:24:45;449:226:90;5041:119:45;-1:-1:-1;5180:10:45;5173:17;;2316:764:73;2378:13;2407:1;2412;2407:6;2403:20;;-1:-1:-1;2422:1:73;2415:8;;2403:20;2434:11;2448:21;2467:1;2009:3;1269;-1:-1:-1;;;;;1274:41:73;;1265:51;1334:9;;;1397:2;1407:18;1401:25;;1393:34;1445:9;;;1508:2;1518:10;1512:17;;1504:26;1548:9;;;1611:2;1621:6;1615:13;;1607:22;1647:9;;;1710:1;1719:4;1713:11;;1706:19;1743:9;;;1806:1;1815:3;1809:10;;1802:18;1838:9;;;1901:1;1910:3;1904:10;;1897:18;1933:9;;;2003:10;;;;1474:11;;;;1577;;;;1676;1772;1867;;;;1962;1994:20;;1148:882;2448:21;2529:1;2516:11;;;2512:19;;;2572:13;;;;2561:25;2554:33;;2627:13;;;2616:25;2609:33;;2682:13;;;2671:25;2664:33;;2737:13;;;2726:25;2719:33;;2792:13;;;2781:25;2774:33;;2847:13;;;2836:25;2829:33;;2902:13;;;2891:25;2884:33;;2961:13;;;2951:24;;2940:36;;3041:17;;;-1:-1:-1;;;3020:15:73;;3013:23;3009:54;;;;2998:66;;;;2316:764;-1:-1:-1;;2316:764:73:o;5743:516:45:-;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:45;;;;;;;;;;;5870:383;5743:516;:::o;680:247:90:-;747:6;755;808:2;796:9;787:7;783:23;779:32;776:52;;;824:1;821;814:12;776:52;-1:-1:-1;;847:23:90;;;917:2;902:18;;;889:32;;-1:-1:-1;680:247:90:o;1181:118::-;1267:5;1260:13;1253:21;1246:5;1243:32;1233:60;;1289:1;1286;1279:12;1304:309;1369:6;1377;1430:2;1418:9;1409:7;1405:23;1401:32;1398:52;;;1446:1;1443;1436:12;1398:52;1482:9;1469:23;1459:33;;1542:2;1531:9;1527:18;1514:32;1555:28;1577:5;1555:28;:::i;:::-;1602:5;1592:15;;;1304:309;;;;;:::o;1618:241::-;1674:6;1727:2;1715:9;1706:7;1702:23;1698:32;1695:52;;;1743:1;1740;1733:12;1695:52;1782:9;1769:23;1801:28;1823:5;1801:28;:::i;1864:632::-;2035:2;2087:21;;;2157:13;;2060:18;;;2179:22;;;2006:4;;2035:2;2258:15;;;;2232:2;2217:18;;;2006:4;2301:169;2315:6;2312:1;2309:13;2301:169;;;2376:13;;2364:26;;2445:15;;;;2410:12;;;;2337:1;2330:9;2301:169;;;-1:-1:-1;2487:3:90;;1864:632;-1:-1:-1;;;;;;1864:632:90:o;2501:196::-;2569:20;;-1:-1:-1;;;;;2618:54:90;;2608:65;;2598:93;;2687:1;2684;2677:12;2598:93;2501:196;;;:::o;2702:334::-;2779:6;2787;2795;2848:2;2836:9;2827:7;2823:23;2819:32;2816:52;;;2864:1;2861;2854:12;2816:52;2887:29;2906:9;2887:29;:::i;:::-;2877:39;;2935:38;2969:2;2958:9;2954:18;2935:38;:::i;:::-;2925:48;;2992:38;3026:2;3015:9;3011:18;2992:38;:::i;:::-;2982:48;;2702:334;;;;;:::o;3674:937::-;3776:6;3784;3792;3800;3808;3816;3869:3;3857:9;3848:7;3844:23;3840:33;3837:53;;;3886:1;3883;3876:12;3837:53;3909:29;3928:9;3909:29;:::i;:::-;3899:39;;3985:2;3974:9;3970:18;3957:32;3947:42;;4039:2;4028:9;4024:18;4011:32;4052:28;4074:5;4052:28;:::i;:::-;4099:5;-1:-1:-1;4155:2:90;4140:18;;4127:32;4178:18;4208:14;;;4205:34;;;4235:1;4232;4225:12;4205:34;4273:6;4262:9;4258:22;4248:32;;4318:7;4311:4;4307:2;4303:13;4299:27;4289:55;;4340:1;4337;4330:12;4289:55;4380:2;4367:16;4406:2;4398:6;4395:14;4392:34;;;4422:1;4419;4412:12;4392:34;4467:7;4462:2;4453:6;4449:2;4445:15;4441:24;4438:37;4435:57;;;4488:1;4485;4478:12;4435:57;4519:2;4515;4511:11;4501:21;;4541:6;4531:16;;;;;4566:39;4600:3;4589:9;4585:19;4566:39;:::i;:::-;4556:49;;3674:937;;;;;;;;:::o;4616:127::-;4677:10;4672:3;4668:20;4665:1;4658:31;4708:4;4705:1;4698:15;4732:4;4729:1;4722:15;4748:128;4815:9;;;4836:11;;;4833:37;;;4850:18;;:::i;4881:136::-;4916:3;-1:-1:-1;;;4937:22:90;;4934:48;;4962:18;;:::i;:::-;-1:-1:-1;5002:1:90;4998:13;;4881:136::o;5022:168::-;5095:9;;;5126;;5143:15;;;5137:22;;5123:37;5113:71;;5164:18;;:::i;5195:127::-;5256:10;5251:3;5247:20;5244:1;5237:31;5287:4;5284:1;5277:15;5311:4;5308:1;5301:15;5327:120;5367:1;5393;5383:35;;5398:18;;:::i;:::-;-1:-1:-1;5432:9:90;;5327:120::o;5452:112::-;5484:1;5510;5500:35;;5515:18;;:::i;:::-;-1:-1:-1;5549:9:90;;5452:112::o;5569:125::-;5634:9;;;5655:10;;;5652:36;;;5668:18;;:::i;5699:127::-;5760:10;5755:3;5751:20;5748:1;5741:31;5791:4;5788:1;5781:15;5815:4;5812:1;5805:15;5831:127;5892:10;5887:3;5883:20;5880:1;5873:31;5923:4;5920:1;5913:15;5947:4;5944:1;5937:15;5963:135;6002:3;6023:17;;;6020:43;;6043:18;;:::i;:::-;-1:-1:-1;6090:1:90;6079:13;;5963:135::o;6103:200::-;-1:-1:-1;;;;;6239:10:90;;;6227;;;6223:27;;6262:12;;;6259:38;;;6277:18;;:::i;:::-;6259:38;6103:200;;;;:::o;6308:184::-;6378:6;6431:2;6419:9;6410:7;6406:23;6402:32;6399:52;;;6447:1;6444;6437:12;6399:52;-1:-1:-1;6470:16:90;;6308:184;-1:-1:-1;6308:184:90:o;6799:136::-;6838:3;6866:5;6856:39;;6875:18;;:::i;:::-;-1:-1:-1;;;6911:18:90;;6799:136::o;6940:197::-;-1:-1:-1;;;;;7062:10:90;;;7074;;;7058:27;;7097:11;;;7094:37;;;7111:18;;:::i;7545:245::-;7612:6;7665:2;7653:9;7644:7;7640:23;7636:32;7633:52;;;7681:1;7678;7671:12;7633:52;7713:9;7707:16;7732:28;7754:5;7732:28;:::i;7795:306::-;7883:6;7891;7899;7952:2;7940:9;7931:7;7927:23;7923:32;7920:52;;;7968:1;7965;7958:12;7920:52;7997:9;7991:16;7981:26;;8047:2;8036:9;8032:18;8026:25;8016:35;;8091:2;8080:9;8076:18;8070:25;8060:35;;7795:306;;;;;:::o;8106:412::-;8235:3;8273:6;8267:13;8298:1;8308:129;8322:6;8319:1;8316:13;8308:129;;;8420:4;8404:14;;;8400:25;;8394:32;8381:11;;;8374:53;8337:12;8308:129;;;-1:-1:-1;8492:1:90;8456:16;;8481:13;;;-1:-1:-1;8456:16:90;8106:412;-1:-1:-1;8106:412:90:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "claimFees(address,address,address)": "af688fed",
    "getBaseToken()": "98acd7a6",
    "getCirculatingSupply()": "2b112e49",
    "getDeltaAmounts(int256,bool)": "cd56aadc",
    "getDeltaBaseAmount(uint256,int256)": "c357ed4c",
    "getDeltaQuoteAmount(uint256,int256)": "5b2d9a3c",
    "getFactory()": "88cc58e4",
    "getPendingFees()": "c51c2d0e",
    "getPriceAt(uint256,bool)": "7cf0e1f5",
    "getPricePoints(bool)": "7ea516d2",
    "getQuoteToken()": "4a64d67d",
    "getReserves()": "0902f1ac",
    "getTotalSupply()": "c4e41b22",
    "initialize()": "8129fc1c",
    "swap(address,int256,bool,bytes,address)": "dc35ff77"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__DivisionByZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Math__UnderOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PricePoints__OverflowInt256\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PricePoints__TotalSupplyExceeded\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TMMarket__AlreadyInitialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TMMarket__InsufficientAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TMMarket__InvalidCirculatingSupply\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TMMarket__InvalidFees\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TMMarket__InvalidRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TMMarket__InvalidSwapCallback\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TMMarket__OnlyFactory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TMMarket__ReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TMMarket__ReserveOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TMMarket__ZeroAmount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"claimedFees\",\"type\":\"uint256\"}],\"name\":\"FeesClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"deltaBaseAmount\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"deltaQuoteAmount\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quoteFees\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"staking\",\"type\":\"address\"}],\"name\":\"claimFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimedFees\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaseToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCirculatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"deltaAmount\",\"type\":\"int256\"},{\"internalType\":\"bool\",\"name\":\"swapB2Q\",\"type\":\"bool\"}],\"name\":\"getDeltaAmounts\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"deltaBaseAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"deltaQuoteAmount\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"quoteFees\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"deltaQuoteAmount\",\"type\":\"int256\"}],\"name\":\"getDeltaBaseAmount\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"deltaBaseAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"actualDeltaQuoteAmount\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"deltaBaseAmount\",\"type\":\"int256\"}],\"name\":\"getDeltaQuoteAmount\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"actualDeltaBaseAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"deltaQuoteAmount\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPendingFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"creatorFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakingFees\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"circulatingSupply\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"swapB2Q\",\"type\":\"bool\"}],\"name\":\"getPriceAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"swapB2Q\",\"type\":\"bool\"}],\"name\":\"getPricePoints\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getQuoteToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"baseReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteReserve\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"deltaAmount\",\"type\":\"int256\"},{\"internalType\":\"bool\",\"name\":\"swapB2Q\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"deltaBaseAmount\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"deltaQuoteAmount\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The token mill market contract. The view functions might return an outdated value if they're called in the middle of a swap or a fee claim.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"claimFees(address,address,address)\":{\"details\":\"Claims the fees for the caller.\",\"params\":{\"caller\":\"The caller of the function.\",\"creator\":\"The creator of the market.\",\"staking\":\"The staking contract address.\"},\"returns\":{\"claimedFees\":\"The total fees claimed.\"}},\"getBaseToken()\":{\"details\":\"Returns the base token address.\",\"returns\":{\"_0\":\"The base token address.\"}},\"getCirculatingSupply()\":{\"details\":\"Returns the circulating supply.\",\"returns\":{\"_0\":\"The circulating supply.\"}},\"getDeltaAmounts(int256,bool)\":{\"details\":\"Returns the delta amounts.\",\"params\":{\"deltaAmount\":\"The delta amount.\",\"swapB2Q\":\"Whether to swap base to quote (true) or quote to base (false).\"},\"returns\":{\"deltaBaseAmount\":\"The delta base amount.\",\"deltaQuoteAmount\":\"The delta quote amount.\",\"quoteFees\":\"The quote fees.\"}},\"getDeltaBaseAmount(uint256,int256)\":{\"details\":\"Returns the amount of base tokens that should be sent (< 0) or received (> 0) for the specified quote amount.\",\"params\":{\"deltaQuoteAmount\":\"The amount of quote tokens to be sent (< 0) or received (> 0).\",\"supply\":\"The current supply of the base token.\"},\"returns\":{\"actualDeltaQuoteAmount\":\"The actual amount of quote tokens to be sent (< 0) or received (> 0).\",\"deltaBaseAmount\":\"The amount of base tokens to be sent (< 0) or received (> 0).\"}},\"getDeltaQuoteAmount(uint256,int256)\":{\"details\":\"Returns the amount of quote tokens that should be sent (< 0) or received (> 0) for the specified base amount.\",\"params\":{\"deltaBaseAmount\":\"The amount of base tokens to be sent (< 0) or received (> 0).\",\"supply\":\"The current supply of the base token.\"},\"returns\":{\"actualDeltaBaseAmount\":\"The actual amount of base tokens to be sent (< 0) or received (> 0).\",\"deltaQuoteAmount\":\"The amount of quote tokens to be sent (< 0) or received (> 0).\"}},\"getFactory()\":{\"details\":\"Returns the factory address.\",\"returns\":{\"_0\":\"The factory address.\"}},\"getPendingFees()\":{\"details\":\"Returns the pending fees.\",\"returns\":{\"creatorFees\":\"The creator fees.\",\"stakingFees\":\"The staking fees.\"}},\"getPriceAt(uint256,bool)\":{\"details\":\"Returns the price at the specified circulating supply.\",\"params\":{\"circulatingSupply\":\"The circulating supply.\",\"swapB2Q\":\"Whether to swap base to quote (true) or quote to base (false).\"},\"returns\":{\"_0\":\"The price.\"}},\"getPricePoints(bool)\":{\"details\":\"Returns the price points.\",\"params\":{\"swapB2Q\":\"Whether to swap base to quote (true) or quote to base (false).\"},\"returns\":{\"_0\":\"The price points.\"}},\"getQuoteToken()\":{\"details\":\"Returns the quote token address.\",\"returns\":{\"_0\":\"The quote token address.\"}},\"getReserves()\":{\"details\":\"Returns the reserves. The quote reserve includes the pending fees.\",\"returns\":{\"baseReserve\":\"The base reserve.\",\"quoteReserve\":\"The quote reserve (including the pending fees).\"}},\"getTotalSupply()\":{\"details\":\"Returns the total supply.\",\"returns\":{\"_0\":\"The total supply.\"}},\"initialize()\":{\"details\":\"Initializes the contract.\"},\"swap(address,int256,bool,bytes,address)\":{\"details\":\"Swap tokens. TOKEN/USD -> TOKEN is base, USD is quote swapB2Q = true  + dAmount > 0 (true)  -> in: dAmount Base,  out:       -X Quote swapB2Q = true  + dAmount < 0 (false) -> in:       X Base,  out: -dAmount Quote swapB2Q = false + dAmount > 0 (true)  -> in: dAmount Quote, out:       -X Base swapB2Q = false + dAmount < 0 (false) -> in:       X Quote, out: -dAmount Base\",\"params\":{\"data\":\"The data to be passed to the swap callback. If the data is empty, the callback will be skipped.\",\"deltaAmount\":\"The delta amount.\",\"recipient\":\"The recipient of the tokens.\",\"swapB2Q\":\"Whether to swap base to quote (true) or quote to base (false).\"},\"returns\":{\"deltaBaseAmount\":\"The delta base amount.\",\"deltaQuoteAmount\":\"The delta quote amount.\"}}},\"title\":\"Token Mill Market\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/TMMarket.sol\":\"TMMarket\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":600},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"src/TMMarket.sol\":{\"keccak256\":\"0xe4861f5c524ad39c4ad49d0571a039b4a813242348e26416ed7b5cfe43368a12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72e61f0720f8db6e559e2090518ee7fc0741eb82d6ffd223ae3c6e2550c989a0\",\"dweb:/ipfs/QmNiUykrVFFo3UsJQk6mKWTZKNNXCvx3LuuS7armTkRyrB\"]},\"src/interfaces/IPricePoints.sol\":{\"keccak256\":\"0x6421c50ffe0d86860a2bf583d3a598a212691543acecf9292416ac9a1c84151d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://728cd70a7d92c8d3b923dcf596d76cf30f55f0decc79e0ccc6a2ef760874da4c\",\"dweb:/ipfs/QmRRLxb9rZPXB6YRQUWmm5nrXfFWpTNopHjtQ4d1rPAqDB\"]},\"src/interfaces/ITMFactory.sol\":{\"keccak256\":\"0xdd77e51deba4668123893a299cf8ef8706865e1156fefc8d30b78f647b0710ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c57663ca54df1a9955c8e2af7ccc2f48d1ef639e181d7a9fa4b0fa9ed30d253\",\"dweb:/ipfs/QmQCT6XiqAA8EGVkqGu9AYsXNETevVd9FoCcNpgyQE1KCv\"]},\"src/interfaces/ITMMarket.sol\":{\"keccak256\":\"0x28c229490ecb19245ccb836ebae324de3d19af54887723983812249eacfc87ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://565c94811c62d525c3c0917d3b5239545367169873449be16cc149f3e69df22b\",\"dweb:/ipfs/QmPqF1NxTthcjP3agrsvyMSLLEh13i1xyoWQvTKkciCacm\"]},\"src/interfaces/ITokenMillCallback.sol\":{\"keccak256\":\"0xc50dd34c27597d80d458dbbd4b9f1b89a9d2633716b76c0ff5cb21c2c372e023\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd5ae58c4a489fa009d7eac1e96fc0f8d953a6d45e4ee2fd31ad7d5c1b359595\",\"dweb:/ipfs/QmWoUqbNPtyAYyu1DGrkoMvJnryKv1K3FNmrU7Ne3D4Loh\"]},\"src/libraries/ImmutableContract.sol\":{\"keccak256\":\"0x9b000febfa6270eb59dd74ec156ab0d429dd4a1c0c88c442a8c80c2b754cd334\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d17afa8304911e5a7ed6c1af06606321ed6d65da6f033ca1d5c54ac8b6d6d99e\",\"dweb:/ipfs/QmfZ5MA9tYUa7kM3azYsVk4Z3rvfDzGur3rNVWBjaFN7Ek\"]},\"src/libraries/Math.sol\":{\"keccak256\":\"0x7cc6f063c2e026cc190d39c6ee2295126a1863e2fbf71727b49e987b355bfefd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8454cc6ed9d6aec30ee68e99c873ee65410118fb41f81d7884fc075399e8b23\",\"dweb:/ipfs/QmWnhPJLJNhmpcQakarv3H4ffjadc2T6Xgx23XRJuNKHyR\"]},\"src/libraries/PricePoints.sol\":{\"keccak256\":\"0xf44399dd56321c060727500f363a60387c086cb6b7542ef5f34dbe95c46df02a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2bfb132803d6f99d02cfc3aa3d5762273c92eaeec7373109f6020c09168621d3\",\"dweb:/ipfs/QmZ8x6kcT7UoZdCgrQ6912BAxC5JqfgyCFh4ZdLQUoX1tj\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.20+commit.a1b79de6" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "target", "type": "address" }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "type": "error",
          "name": "AddressInsufficientBalance"
        },
        { "inputs": [], "type": "error", "name": "FailedInnerCall" },
        { "inputs": [], "type": "error", "name": "Math__DivisionByZero" },
        { "inputs": [], "type": "error", "name": "Math__UnderOverflow" },
        {
          "inputs": [],
          "type": "error",
          "name": "PricePoints__OverflowInt256"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PricePoints__TotalSupplyExceeded"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TMMarket__AlreadyInitialized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TMMarket__InsufficientAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TMMarket__InvalidCirculatingSupply"
        },
        { "inputs": [], "type": "error", "name": "TMMarket__InvalidFees" },
        { "inputs": [], "type": "error", "name": "TMMarket__InvalidRecipient" },
        {
          "inputs": [],
          "type": "error",
          "name": "TMMarket__InvalidSwapCallback"
        },
        { "inputs": [], "type": "error", "name": "TMMarket__OnlyFactory" },
        { "inputs": [], "type": "error", "name": "TMMarket__ReentrantCall" },
        { "inputs": [], "type": "error", "name": "TMMarket__ReserveOverflow" },
        { "inputs": [], "type": "error", "name": "TMMarket__ZeroAmount" },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "claimedFees",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FeesClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int256",
              "name": "deltaBaseAmount",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "deltaQuoteAmount",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "quoteFees",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Swap",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "caller", "type": "address" },
            { "internalType": "address", "name": "creator", "type": "address" },
            { "internalType": "address", "name": "staking", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimFees",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "claimedFees",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getBaseToken",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCirculatingSupply",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "deltaAmount",
              "type": "int256"
            },
            { "internalType": "bool", "name": "swapB2Q", "type": "bool" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeltaAmounts",
          "outputs": [
            {
              "internalType": "int256",
              "name": "deltaBaseAmount",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "deltaQuoteAmount",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "quoteFees",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "supply", "type": "uint256" },
            {
              "internalType": "int256",
              "name": "deltaQuoteAmount",
              "type": "int256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeltaBaseAmount",
          "outputs": [
            {
              "internalType": "int256",
              "name": "deltaBaseAmount",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "actualDeltaQuoteAmount",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "supply", "type": "uint256" },
            {
              "internalType": "int256",
              "name": "deltaBaseAmount",
              "type": "int256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeltaQuoteAmount",
          "outputs": [
            {
              "internalType": "int256",
              "name": "actualDeltaBaseAmount",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "deltaQuoteAmount",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getFactory",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPendingFees",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "creatorFees",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakingFees",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "circulatingSupply",
              "type": "uint256"
            },
            { "internalType": "bool", "name": "swapB2Q", "type": "bool" }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getPriceAt",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bool", "name": "swapB2Q", "type": "bool" }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getPricePoints",
          "outputs": [
            { "internalType": "uint256[]", "name": "", "type": "uint256[]" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getQuoteToken",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getReserves",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "baseReserve",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quoteReserve",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getTotalSupply",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "deltaAmount",
              "type": "int256"
            },
            { "internalType": "bool", "name": "swapB2Q", "type": "bool" },
            { "internalType": "bytes", "name": "data", "type": "bytes" },
            { "internalType": "address", "name": "referrer", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "swap",
          "outputs": [
            {
              "internalType": "int256",
              "name": "deltaBaseAmount",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "deltaQuoteAmount",
              "type": "int256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "claimFees(address,address,address)": {
            "details": "Claims the fees for the caller.",
            "params": {
              "caller": "The caller of the function.",
              "creator": "The creator of the market.",
              "staking": "The staking contract address."
            },
            "returns": { "claimedFees": "The total fees claimed." }
          },
          "getBaseToken()": {
            "details": "Returns the base token address.",
            "returns": { "_0": "The base token address." }
          },
          "getCirculatingSupply()": {
            "details": "Returns the circulating supply.",
            "returns": { "_0": "The circulating supply." }
          },
          "getDeltaAmounts(int256,bool)": {
            "details": "Returns the delta amounts.",
            "params": {
              "deltaAmount": "The delta amount.",
              "swapB2Q": "Whether to swap base to quote (true) or quote to base (false)."
            },
            "returns": {
              "deltaBaseAmount": "The delta base amount.",
              "deltaQuoteAmount": "The delta quote amount.",
              "quoteFees": "The quote fees."
            }
          },
          "getDeltaBaseAmount(uint256,int256)": {
            "details": "Returns the amount of base tokens that should be sent (< 0) or received (> 0) for the specified quote amount.",
            "params": {
              "deltaQuoteAmount": "The amount of quote tokens to be sent (< 0) or received (> 0).",
              "supply": "The current supply of the base token."
            },
            "returns": {
              "actualDeltaQuoteAmount": "The actual amount of quote tokens to be sent (< 0) or received (> 0).",
              "deltaBaseAmount": "The amount of base tokens to be sent (< 0) or received (> 0)."
            }
          },
          "getDeltaQuoteAmount(uint256,int256)": {
            "details": "Returns the amount of quote tokens that should be sent (< 0) or received (> 0) for the specified base amount.",
            "params": {
              "deltaBaseAmount": "The amount of base tokens to be sent (< 0) or received (> 0).",
              "supply": "The current supply of the base token."
            },
            "returns": {
              "actualDeltaBaseAmount": "The actual amount of base tokens to be sent (< 0) or received (> 0).",
              "deltaQuoteAmount": "The amount of quote tokens to be sent (< 0) or received (> 0)."
            }
          },
          "getFactory()": {
            "details": "Returns the factory address.",
            "returns": { "_0": "The factory address." }
          },
          "getPendingFees()": {
            "details": "Returns the pending fees.",
            "returns": {
              "creatorFees": "The creator fees.",
              "stakingFees": "The staking fees."
            }
          },
          "getPriceAt(uint256,bool)": {
            "details": "Returns the price at the specified circulating supply.",
            "params": {
              "circulatingSupply": "The circulating supply.",
              "swapB2Q": "Whether to swap base to quote (true) or quote to base (false)."
            },
            "returns": { "_0": "The price." }
          },
          "getPricePoints(bool)": {
            "details": "Returns the price points.",
            "params": {
              "swapB2Q": "Whether to swap base to quote (true) or quote to base (false)."
            },
            "returns": { "_0": "The price points." }
          },
          "getQuoteToken()": {
            "details": "Returns the quote token address.",
            "returns": { "_0": "The quote token address." }
          },
          "getReserves()": {
            "details": "Returns the reserves. The quote reserve includes the pending fees.",
            "returns": {
              "baseReserve": "The base reserve.",
              "quoteReserve": "The quote reserve (including the pending fees)."
            }
          },
          "getTotalSupply()": {
            "details": "Returns the total supply.",
            "returns": { "_0": "The total supply." }
          },
          "initialize()": { "details": "Initializes the contract." },
          "swap(address,int256,bool,bytes,address)": {
            "details": "Swap tokens. TOKEN/USD -> TOKEN is base, USD is quote swapB2Q = true  + dAmount > 0 (true)  -> in: dAmount Base,  out:       -X Quote swapB2Q = true  + dAmount < 0 (false) -> in:       X Base,  out: -dAmount Quote swapB2Q = false + dAmount > 0 (true)  -> in: dAmount Quote, out:       -X Base swapB2Q = false + dAmount < 0 (false) -> in:       X Quote, out: -dAmount Base",
            "params": {
              "data": "The data to be passed to the swap callback. If the data is empty, the callback will be skipped.",
              "deltaAmount": "The delta amount.",
              "recipient": "The recipient of the tokens.",
              "swapB2Q": "Whether to swap base to quote (true) or quote to base (false)."
            },
            "returns": {
              "deltaBaseAmount": "The delta base amount.",
              "deltaQuoteAmount": "The delta quote amount."
            }
          }
        },
        "version": 1
      },
      "userdoc": { "kind": "user", "methods": {}, "version": 1 }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": { "enabled": true, "runs": 600 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/TMMarket.sol": "TMMarket" },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
        "urls": [
          "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
          "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
        "urls": [
          "bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
          "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "src/TMMarket.sol": {
        "keccak256": "0xe4861f5c524ad39c4ad49d0571a039b4a813242348e26416ed7b5cfe43368a12",
        "urls": [
          "bzz-raw://72e61f0720f8db6e559e2090518ee7fc0741eb82d6ffd223ae3c6e2550c989a0",
          "dweb:/ipfs/QmNiUykrVFFo3UsJQk6mKWTZKNNXCvx3LuuS7armTkRyrB"
        ],
        "license": "MIT"
      },
      "src/interfaces/IPricePoints.sol": {
        "keccak256": "0x6421c50ffe0d86860a2bf583d3a598a212691543acecf9292416ac9a1c84151d",
        "urls": [
          "bzz-raw://728cd70a7d92c8d3b923dcf596d76cf30f55f0decc79e0ccc6a2ef760874da4c",
          "dweb:/ipfs/QmRRLxb9rZPXB6YRQUWmm5nrXfFWpTNopHjtQ4d1rPAqDB"
        ],
        "license": "MIT"
      },
      "src/interfaces/ITMFactory.sol": {
        "keccak256": "0xdd77e51deba4668123893a299cf8ef8706865e1156fefc8d30b78f647b0710ea",
        "urls": [
          "bzz-raw://9c57663ca54df1a9955c8e2af7ccc2f48d1ef639e181d7a9fa4b0fa9ed30d253",
          "dweb:/ipfs/QmQCT6XiqAA8EGVkqGu9AYsXNETevVd9FoCcNpgyQE1KCv"
        ],
        "license": "MIT"
      },
      "src/interfaces/ITMMarket.sol": {
        "keccak256": "0x28c229490ecb19245ccb836ebae324de3d19af54887723983812249eacfc87ec",
        "urls": [
          "bzz-raw://565c94811c62d525c3c0917d3b5239545367169873449be16cc149f3e69df22b",
          "dweb:/ipfs/QmPqF1NxTthcjP3agrsvyMSLLEh13i1xyoWQvTKkciCacm"
        ],
        "license": "MIT"
      },
      "src/interfaces/ITokenMillCallback.sol": {
        "keccak256": "0xc50dd34c27597d80d458dbbd4b9f1b89a9d2633716b76c0ff5cb21c2c372e023",
        "urls": [
          "bzz-raw://cd5ae58c4a489fa009d7eac1e96fc0f8d953a6d45e4ee2fd31ad7d5c1b359595",
          "dweb:/ipfs/QmWoUqbNPtyAYyu1DGrkoMvJnryKv1K3FNmrU7Ne3D4Loh"
        ],
        "license": "MIT"
      },
      "src/libraries/ImmutableContract.sol": {
        "keccak256": "0x9b000febfa6270eb59dd74ec156ab0d429dd4a1c0c88c442a8c80c2b754cd334",
        "urls": [
          "bzz-raw://d17afa8304911e5a7ed6c1af06606321ed6d65da6f033ca1d5c54ac8b6d6d99e",
          "dweb:/ipfs/QmfZ5MA9tYUa7kM3azYsVk4Z3rvfDzGur3rNVWBjaFN7Ek"
        ],
        "license": "MIT"
      },
      "src/libraries/Math.sol": {
        "keccak256": "0x7cc6f063c2e026cc190d39c6ee2295126a1863e2fbf71727b49e987b355bfefd",
        "urls": [
          "bzz-raw://c8454cc6ed9d6aec30ee68e99c873ee65410118fb41f81d7884fc075399e8b23",
          "dweb:/ipfs/QmWnhPJLJNhmpcQakarv3H4ffjadc2T6Xgx23XRJuNKHyR"
        ],
        "license": "MIT"
      },
      "src/libraries/PricePoints.sol": {
        "keccak256": "0xf44399dd56321c060727500f363a60387c086cb6b7542ef5f34dbe95c46df02a",
        "urls": [
          "bzz-raw://2bfb132803d6f99d02cfc3aa3d5762273c92eaeec7373109f6020c09168621d3",
          "dweb:/ipfs/QmZ8x6kcT7UoZdCgrQ6912BAxC5JqfgyCFh4ZdLQUoX1tj"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 52
}
